{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zakaria/work/promote-me/front/src/utils/useColorModeStyles.ts"],"sourcesContent":["  import { useColorMode, useColorModeValue } from '@chakra-ui/react';\n\n  const useColorModeStyles = () => {\n    const { toggleColorMode } = useColorMode();\n\n    // Instagram Theme Colors\n    const instagramGradient = useColorModeValue(\n      'linear(to-r, #feda75, #fa7e1e, #d62976, #962fbf, #4f5bd5)',\n      'linear(to-r, #4f5bd5, #962fbf, #d62976, #fa7e1e, #feda75)'\n    );\n    const instagramTextColor = useColorModeValue('#d62976', '#feda75');\n    const instagramIconColor = useColorModeValue('#d62976', '#feda75');\n\n    // General Theme Colors\n    const bg = useColorModeValue('white', 'gray.800');\n    const tiktok = useColorModeValue('gray.800', 'white');\n    const textColor = useColorModeValue('gray.800', 'gray.200');\n    const borderColor = useColorModeValue('gray.300', 'gray.600');\n    const hoverColor = useColorModeValue('#fa7e1e', '#d62976');\n    const navBgColor = useColorModeValue('gray.100', 'gray.600');\n\n    return {\n      bg,\n      tiktok,\n      textColor,\n      borderColor,\n      hoverColor,\n      navBgColor,\n      instagramGradient,\n      instagramTextColor,\n      instagramIconColor,\n      toggleColorMode,\n    };\n  };\n\n  export default useColorModeStyles;\n"],"names":[],"mappings":";;;AAAE;;AAEA,MAAM,qBAAqB;IACzB,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,oMAAA,CAAA,eAAY,AAAD;IAEvC,yBAAyB;IACzB,MAAM,oBAAoB,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EACxC,6DACA;IAEF,MAAM,qBAAqB,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EAAE,WAAW;IACxD,MAAM,qBAAqB,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EAAE,WAAW;IAExD,uBAAuB;IACvB,MAAM,KAAK,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS;IACtC,MAAM,SAAS,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY;IAC7C,MAAM,YAAY,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY;IAChD,MAAM,cAAc,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY;IAClD,MAAM,aAAa,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EAAE,WAAW;IAChD,MAAM,aAAa,CAAA,GAAA,oMAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY;IAEjD,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;uCAEe"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zakaria/work/promote-me/front/src/components/register/MainRegister.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Input,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport useColorModeStyles from \"@/utils/useColorModeStyles\";\r\n\r\nconst MainRegister = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    confirmationCode: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dateOfBirth: \"\",\r\n    gender: \"\",\r\n    lookingFor: \"\",\r\n  });\r\n  const [isClient, setIsClient] = useState(false); // Fix SSR hydration issue\r\n  const { bg, textColor, hoverColor, borderColor } = useColorModeStyles();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    setIsClient(true); // Ensure client-side rendering\r\n  }, []);\r\n\r\n  if (!isClient) return null; // Avoid rendering on server\r\n\r\n  const steps = [\r\n    {\r\n      title: \"What's your email?\",\r\n      description: \"To create or login to your account\",\r\n      key: \"email\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"Enter your email\"\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => updateFormData(\"email\", e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Enter the confirmation code\",\r\n      description: \"Check your email for the code we sent you.\",\r\n      key: \"confirmationCode\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"Enter confirmation code\"\r\n          type=\"text\"\r\n          value={formData.confirmationCode}\r\n          onChange={(e) => updateFormData(\"confirmationCode\", e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"What's your first name?\",\r\n      description: \"Let us know how to address you.\",\r\n      key: \"firstName\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"Enter your first name\"\r\n          type=\"text\"\r\n          value={formData.firstName}\r\n          onChange={(e) => updateFormData(\"firstName\", e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"What's your last name?\",\r\n      description: \"Share your family name.\",\r\n      key: \"lastName\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"Enter your last name\"\r\n          type=\"text\"\r\n          value={formData.lastName}\r\n          onChange={(e) => updateFormData(\"lastName\", e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Enter your date of birth\",\r\n      description: \"We need this to verify your age.\",\r\n      key: \"dateOfBirth\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"DD/MM/YYYY\"\r\n          type=\"date\"\r\n          value={formData.dateOfBirth}\r\n          onChange={(e) => updateFormData(\"dateOfBirth\", e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"What's your gender?\",\r\n      description: \"Please select your gender.\",\r\n      key: \"gender\",\r\n      component: (\r\n        <RadioGroup\r\n          value={formData.gender}\r\n          onChange={(value) => updateFormData(\"gender\", value)}\r\n        >\r\n          <Stack spacing={4} direction=\"row\">\r\n            <Radio value=\"male\">Male</Radio>\r\n            <Radio value=\"female\">Female</Radio>\r\n            <Radio value=\"nonbinary\">Non-Binary</Radio>\r\n          </Stack>\r\n        </RadioGroup>\r\n      ),\r\n    },\r\n    {\r\n      title: \"What are you looking for?\",\r\n      description: \"Select one option that best describes your intent.\",\r\n      key: \"lookingFor\",\r\n      component: (\r\n        <RadioGroup\r\n          value={formData.lookingFor}\r\n          onChange={(value) => updateFormData(\"lookingFor\", value)}\r\n        >\r\n          <Stack spacing={4}>\r\n            <Radio value=\"marriage\">Get Married</Radio>\r\n            <Radio value=\"relationship\">Find a Relationship</Radio>\r\n            <Radio value=\"friends\">Chat and Meet Friends</Radio>\r\n            <Radio value=\"culture\">Know Other Cultures</Radio>\r\n          </Stack>\r\n        </RadioGroup>\r\n      ),\r\n      skippable: true,\r\n    },\r\n  ];\r\n\r\n  const updateFormData = (key: string, value: string) => {\r\n    setFormData((prev) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (step === 2 && formData.confirmationCode !== \"123456\") {\r\n      toast({\r\n        title: \"Invalid Code\",\r\n        description: \"Please check your email and enter the correct code.\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [steps[step - 1].key]: \"\",\r\n    }));\r\n\r\n    setStep((prev) => prev + 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    setStep((prev) => prev + 1);\r\n  };\r\n\r\n  const currentStep = steps[step - 1];\r\n\r\n  return (\r\n    <Flex justify=\"center\" align=\"center\" py={5} px={5} height=\"100vh\">\r\n      <Box bg={bg} color={textColor} p={8} borderRadius=\"md\" shadow=\"md\">\r\n        <Text fontSize=\"2xl\" fontWeight=\"bold\">{currentStep.title}</Text>\r\n        <Text mt={2} mb={6} fontSize=\"md\">{currentStep.description}</Text>\r\n        <Box mb={6}>{currentStep.component}</Box>\r\n        <Button\r\n          colorScheme=\"blue\"\r\n          mr={4}\r\n          onClick={handleNext}\r\n          bg={hoverColor}\r\n          _hover={{ bg: hoverColor }}\r\n        >\r\n          Next\r\n        </Button>\r\n        {currentStep.skippable && (\r\n          <Button variant=\"ghost\" onClick={handleSkip}>\r\n            Skip\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MainRegister;\r\n"],"names":[],"mappings":";;;;AACA;AAYA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;;AAeA,MAAM,eAAe;IACnB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,OAAO;QACP,kBAAkB;QAClB,WAAW;QACX,UAAU;QACV,aAAa;QACb,QAAQ;QACR,YAAY;IACd;IACA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,0BAA0B;IAC3E,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAkB,AAAD;IACpE,MAAM,QAAQ,CAAA,GAAA,gLAAA,CAAA,WAAQ,AAAD;IAErB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY,OAAO,+BAA+B;IACpD,GAAG,EAAE;IAEL,IAAI,CAAC,UAAU,OAAO,MAAM,4BAA4B;IAExD,MAAM,QAAQ;QACZ;YACE,OAAO;YACP,aAAa;YACb,KAAK;YACL,yBACE,8OAAC,yKAAA,CAAA,QAAK;gBACJ,aAAY;gBACZ,MAAK;gBACL,OAAO,SAAS,KAAK;gBACrB,UAAU,CAAC,IAAM,eAAe,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;QAG7D;QACA;YACE,OAAO;YACP,aAAa;YACb,KAAK;YACL,yBACE,8OAAC,yKAAA,CAAA,QAAK;gBACJ,aAAY;gBACZ,MAAK;gBACL,OAAO,SAAS,gBAAgB;gBAChC,UAAU,CAAC,IAAM,eAAe,oBAAoB,EAAE,MAAM,CAAC,KAAK;;;;;;QAGxE;QACA;YACE,OAAO;YACP,aAAa;YACb,KAAK;YACL,yBACE,8OAAC,yKAAA,CAAA,QAAK;gBACJ,aAAY;gBACZ,MAAK;gBACL,OAAO,SAAS,SAAS;gBACzB,UAAU,CAAC,IAAM,eAAe,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;QAGjE;QACA;YACE,OAAO;YACP,aAAa;YACb,KAAK;YACL,yBACE,8OAAC,yKAAA,CAAA,QAAK;gBACJ,aAAY;gBACZ,MAAK;gBACL,OAAO,SAAS,QAAQ;gBACxB,UAAU,CAAC,IAAM,eAAe,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;QAGhE;QACA;YACE,OAAO;YACP,aAAa;YACb,KAAK;YACL,yBACE,8OAAC,yKAAA,CAAA,QAAK;gBACJ,aAAY;gBACZ,MAAK;gBACL,OAAO,SAAS,WAAW;gBAC3B,UAAU,CAAC,IAAM,eAAe,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;QAGnE;QACA;YACE,OAAO;YACP,aAAa;YACb,KAAK;YACL,yBACE,8OAAC,kLAAA,CAAA,aAAU;gBACT,OAAO,SAAS,MAAM;gBACtB,UAAU,CAAC,QAAU,eAAe,UAAU;0BAE9C,cAAA,8OAAC,yKAAA,CAAA,QAAK;oBAAC,SAAS;oBAAG,WAAU;;sCAC3B,8OAAC,yKAAA,CAAA,QAAK;4BAAC,OAAM;sCAAO;;;;;;sCACpB,8OAAC,yKAAA,CAAA,QAAK;4BAAC,OAAM;sCAAS;;;;;;sCACtB,8OAAC,yKAAA,CAAA,QAAK;4BAAC,OAAM;sCAAY;;;;;;;;;;;;;;;;;QAIjC;QACA;YACE,OAAO;YACP,aAAa;YACb,KAAK;YACL,yBACE,8OAAC,kLAAA,CAAA,aAAU;gBACT,OAAO,SAAS,UAAU;gBAC1B,UAAU,CAAC,QAAU,eAAe,cAAc;0BAElD,cAAA,8OAAC,yKAAA,CAAA,QAAK;oBAAC,SAAS;;sCACd,8OAAC,yKAAA,CAAA,QAAK;4BAAC,OAAM;sCAAW;;;;;;sCACxB,8OAAC,yKAAA,CAAA,QAAK;4BAAC,OAAM;sCAAe;;;;;;sCAC5B,8OAAC,yKAAA,CAAA,QAAK;4BAAC,OAAM;sCAAU;;;;;;sCACvB,8OAAC,yKAAA,CAAA,QAAK;4BAAC,OAAM;sCAAU;;;;;;;;;;;;;;;;;YAI7B,WAAW;QACb;KACD;IAED,MAAM,iBAAiB,CAAC,KAAa;QACnC,YAAY,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,IAAI,EAAE;YAAM,CAAC;IAClD;IAEA,MAAM,aAAa;QACjB,IAAI,SAAS,KAAK,SAAS,gBAAgB,KAAK,UAAU;YACxD,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,QAAQ;gBACR,UAAU;gBACV,YAAY;YACd;YACA;QACF;QAEA,YAAY,CAAC,OAAS,CAAC;gBACrB,GAAG,IAAI;gBACP,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE;YACzB,CAAC;QAED,QAAQ,CAAC,OAAS,OAAO;IAC3B;IAEA,MAAM,aAAa;QACjB,QAAQ,CAAC,OAAS,OAAO;IAC3B;IAEA,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE;IAEnC,qBACE,8OAAC,uKAAA,CAAA,OAAI;QAAC,SAAQ;QAAS,OAAM;QAAS,IAAI;QAAG,IAAI;QAAG,QAAO;kBACzD,cAAA,8OAAC,qKAAA,CAAA,MAAG;YAAC,IAAI;YAAI,OAAO;YAAW,GAAG;YAAG,cAAa;YAAK,QAAO;;8BAC5D,8OAAC,6KAAA,CAAA,OAAI;oBAAC,UAAS;oBAAM,YAAW;8BAAQ,YAAY,KAAK;;;;;;8BACzD,8OAAC,6KAAA,CAAA,OAAI;oBAAC,IAAI;oBAAG,IAAI;oBAAG,UAAS;8BAAM,YAAY,WAAW;;;;;;8BAC1D,8OAAC,qKAAA,CAAA,MAAG;oBAAC,IAAI;8BAAI,YAAY,SAAS;;;;;;8BAClC,8OAAC,2KAAA,CAAA,SAAM;oBACL,aAAY;oBACZ,IAAI;oBACJ,SAAS;oBACT,IAAI;oBACJ,QAAQ;wBAAE,IAAI;oBAAW;8BAC1B;;;;;;gBAGA,YAAY,SAAS,kBACpB,8OAAC,2KAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,SAAS;8BAAY;;;;;;;;;;;;;;;;;AAOvD;uCAEe"}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}