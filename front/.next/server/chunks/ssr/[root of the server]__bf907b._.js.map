{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zakaria/work/promote-me/front/src/components/register/MainRegister.tsx"],"sourcesContent":["'use client';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Flex,\n  Input,\n  Radio,\n  RadioGroup,\n  Stack,\n  Text,\n  Checkbox,\n  CheckboxGroup,\n  useToast,\n} from '@chakra-ui/react';\nimport { useRouter } from 'next/navigation';\n\nconst MainRegister = () => {\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    birth_date: '',\n    gender: '',\n    location: '',\n    bio: '',\n    interests: [],\n    snapchat: '',\n    instagram: '',\n    tiktok: '',\n  });\n\n  const toast = useToast();\n  const router = useRouter();\n\n  const steps = [\n    {\n      title: \"Choose a Username\",\n      description: \"Pick a unique username for your account.\",\n      key: \"username\",\n      component: (\n        <Input\n          placeholder=\"Enter your username\"\n          value={formData.username}\n          onChange={(e) => updateFormData('username', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Enter Your Email\",\n      description: \"We'll send a confirmation email to this address.\",\n      key: \"email\",\n      component: (\n        <Input\n          placeholder=\"Enter your email\"\n          type=\"email\"\n          value={formData.email}\n          onChange={(e) => updateFormData('email', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Create a Password\",\n      description: \"Choose a strong password for your account.\",\n      key: \"password\",\n      component: (\n        <Input\n          placeholder=\"Enter your password\"\n          type=\"password\"\n          value={formData.password}\n          onChange={(e) => updateFormData('password', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"First Name\",\n      description: \"Let us know your first name.\",\n      key: \"first_name\",\n      component: (\n        <Input\n          placeholder=\"Enter your first name\"\n          value={formData.first_name}\n          onChange={(e) => updateFormData('first_name', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Last Name\",\n      description: \"Share your family name.\",\n      key: \"last_name\",\n      component: (\n        <Input\n          placeholder=\"Enter your last name\"\n          value={formData.last_name}\n          onChange={(e) => updateFormData('last_name', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Date of Birth\",\n      description: \"We need your birth date for verification.\",\n      key: \"birth_date\",\n      component: (\n        <Input\n          type=\"date\"\n          value={formData.birth_date}\n          onChange={(e) => updateFormData('birth_date', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Select Your Gender\",\n      description: \"Choose your gender.\",\n      key: \"gender\",\n      component: (\n        <RadioGroup\n          value={formData.gender}\n          onChange={(value) => updateFormData('gender', value)}\n        >\n          <Stack direction=\"row\">\n            <Radio value=\"Male\">Male</Radio>\n            <Radio value=\"Female\">Female</Radio>\n            <Radio value=\"Non-Binary\">Non-Binary</Radio>\n          </Stack>\n        </RadioGroup>\n      ),\n    },\n    {\n      title: \"Your Location\",\n      description: \"Where are you currently located?\",\n      key: \"location\",\n      component: (\n        <Input\n          placeholder=\"Enter your location\"\n          value={formData.location}\n          onChange={(e) => updateFormData('location', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Write a Short Bio\",\n      description: \"Tell others a little bit about yourself.\",\n      key: \"bio\",\n      component: (\n        <Input\n          placeholder=\"Write your bio\"\n          value={formData.bio}\n          onChange={(e) => updateFormData('bio', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Select Your Interests\",\n      description: \"Choose things you're passionate about.\",\n      key: \"interests\",\n      component: (\n        <CheckboxGroup\n          value={formData.interests}\n          onChange={(value) => updateFormData('interests', value)}\n        >\n          <Stack>\n            <Checkbox value=\"Traveling\">Traveling</Checkbox>\n            <Checkbox value=\"Photography\">Photography</Checkbox>\n            <Checkbox value=\"Cooking\">Cooking</Checkbox>\n            <Checkbox value=\"Movies\">Movies</Checkbox>\n            <Checkbox value=\"Fitness\">Fitness</Checkbox>\n          </Stack>\n        </CheckboxGroup>\n      ),\n    },\n    {\n      title: \"Snapchat Username\",\n      description: \"Share your Snapchat handle (optional).\",\n      key: \"snapchat\",\n      component: (\n        <Input\n          placeholder=\"Enter your Snapchat username\"\n          value={formData.snapchat}\n          onChange={(e) => updateFormData('snapchat', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Instagram Handle\",\n      description: \"Share your Instagram handle (optional).\",\n      key: \"instagram\",\n      component: (\n        <Input\n          placeholder=\"Enter your Instagram handle\"\n          value={formData.instagram}\n          onChange={(e) => updateFormData('instagram', e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"TikTok Username\",\n      description: \"Share your TikTok handle (optional).\",\n      key: \"tiktok\",\n      component: (\n        <Input\n          placeholder=\"Enter your TikTok username\"\n          value={formData.tiktok}\n          onChange={(e) => updateFormData('tiktok', e.target.value)}\n        />\n      ),\n    },\n  ];\n\n  const updateFormData = (key: string, value: any) => {\n    setFormData((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleNext = async () => {\n    if (step === steps.length) {\n      try {\n        await axios.post('http://localhost:8000/api/v1/register/', formData);\n        toast({\n          title: 'Registration Complete',\n          description: 'Your account has been created successfully!',\n          status: 'success',\n          duration: 3000,\n        });\n        router.push('/login');\n      } catch (error) {\n        toast({\n          title: 'Registration Failed',\n          description: 'Something went wrong!',\n          status: 'error',\n          duration: 3000,\n        });\n      }\n      return;\n    }\n    setStep((prev) => prev + 1);\n  };\n\n  const currentStep = steps[step - 1];\n\n  return (\n    <Flex justify=\"center\" align=\"center\" py={5} px={5} height=\"100vh\">\n      <Box p={8} borderRadius=\"md\" shadow=\"md\">\n        <Text fontSize=\"2xl\" fontWeight=\"bold\">{currentStep.title}</Text>\n        <Text mt={2} mb={6}>{currentStep.description}</Text>\n        <Box mb={6}>{currentStep.component}</Box>\n        <Button colorScheme=\"blue\" onClick={handleNext}>\n          {step === steps.length ? 'Finish' : 'Next'}\n        </Button>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default MainRegister;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}