{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zakaria/work/promote-me/front/src/components/register/MainRegister.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState } from 'react';\r\nimport { Box, Button, Input, Radio, RadioGroup, Stack, Text, Textarea, useToast, Flex } from '@chakra-ui/react';\r\n\r\nconst MainRegister = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({});\r\n  const { bg, textColor, instagramGradient, hoverColor } = useColorModeStyles();\r\n  const toast = useToast();\r\n\r\n  const steps = [\r\n    {\r\n      title: \"What's your email?\",\r\n      description: \"To create or login to your account\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"Enter your email\"\r\n          type=\"email\"\r\n          onChange={(e) => updateFormData('email', e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Enter the confirmation code\",\r\n      description: \"Check your email for the code we sent you.\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"Enter confirmation code\"\r\n          type=\"text\"\r\n          onChange={(e) => updateFormData('confirmationCode', e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"What's your first name?\",\r\n      description: \"Let us know how to address you.\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"Enter your first name\"\r\n          type=\"text\"\r\n          onChange={(e) => updateFormData('firstName', e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"What's your last name?\",\r\n      description: \"Share your family name.\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"Enter your last name\"\r\n          type=\"text\"\r\n          onChange={(e) => updateFormData('lastName', e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Enter your date of birth\",\r\n      description: \"We need this to verify your age.\",\r\n      component: (\r\n        <Input\r\n          placeholder=\"DD/MM/YYYY\"\r\n          type=\"date\"\r\n          onChange={(e) => updateFormData('dateOfBirth', e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"What's your gender?\",\r\n      description: \"Please select your gender.\",\r\n      component: (\r\n        <RadioGroup onChange={(value) => updateFormData('gender', value)}>\r\n          <Stack spacing={4} direction=\"row\">\r\n            <Radio value=\"male\">Male</Radio>\r\n            <Radio value=\"female\">Female</Radio>\r\n            <Radio value=\"nonbinary\">Non-Binary</Radio>\r\n          </Stack>\r\n        </RadioGroup>\r\n      ),\r\n    },\r\n    {\r\n      title: \"What are you looking for?\",\r\n      description: \"Select one option that best describes your intent.\",\r\n      component: (\r\n        <RadioGroup onChange={(value) => updateFormData('lookingFor', value)}>\r\n          <Stack spacing={4}>\r\n            <Radio value=\"marriage\">Get Married</Radio>\r\n            <Radio value=\"relationship\">Find a Relationship</Radio>\r\n            <Radio value=\"friends\">Chat and Meet Friends</Radio>\r\n            <Radio value=\"culture\">Know Other Cultures</Radio>\r\n          </Stack>\r\n        </RadioGroup>\r\n      ),\r\n      skippable: true,\r\n    },\r\n    // More steps can follow here based on the structure provided by the user.\r\n  ];\r\n\r\n  const updateFormData = (key, value) => {\r\n    setFormData((prev) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    // Handle validation if necessary here\r\n    if (step === 2 && formData.confirmationCode !== '123456') {\r\n      toast({\r\n        title: 'Invalid Code',\r\n        description: 'Please check your email and enter the correct code.',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n    setStep((prev) => prev + 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    setStep((prev) => prev + 1);\r\n  };\r\n\r\n  const currentStep = steps[step - 1];\r\n\r\n  return (\r\n    <Flex justify=\"center\" align=\"center\" height=\"100vh\" bg={bg}>\r\n      <Box bg={bg} color={textColor} p={8} borderRadius=\"md\" shadow=\"md\" width=\"400px\">\r\n        <Text fontSize=\"2xl\" fontWeight=\"bold\" bgGradient={instagramGradient} bgClip=\"text\">\r\n          {currentStep.title}\r\n        </Text>\r\n        <Text mt={2} mb={6} fontSize=\"md\">\r\n          {currentStep.description}\r\n        </Text>\r\n        <Box mb={6}>{currentStep.component}</Box>\r\n        <Button\r\n          colorScheme=\"pink\"\r\n          mr={4}\r\n          onClick={handleNext}\r\n          bgGradient={instagramGradient}\r\n          _hover={{ bg: hoverColor }}\r\n        >\r\n          Next\r\n        </Button>\r\n        {currentStep.skippable && (\r\n          <Button variant=\"ghost\" onClick={handleSkip}>\r\n            Skip\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}