(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@chakra-ui_react_dist_esm_styled-system_f6e9d0._.js", {

"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ChakraProvider": (()=>ChakraProvider),
    "useChakraContext": (()=>useChakraContext)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/create-context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$react$2f$dist$2f$emotion$2d$react$2e$browser$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@emotion/react/dist/emotion-react.browser.development.esm.js [app-client] (ecmascript) <locals>");
"use strict";
"use client";
;
;
;
const [ChakraContextProvider, useChakraContext] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])({
    name: "ChakraContext",
    strict: true,
    providerName: "<ChakraProvider />"
});
function ChakraProvider(props) {
    const { value: sys, children } = props;
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(ChakraContextProvider, {
        value: sys,
        children: [
            !sys._config.disableLayers && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$react$2f$dist$2f$emotion$2d$react$2e$browser$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Global"], {
                styles: sys.layers.atRule
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$react$2f$dist$2f$emotion$2d$react$2e$browser$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Global"], {
                styles: [
                    sys.getPreflightCss(),
                    sys.getGlobalCss(),
                    sys.getTokenCss()
                ]
            }),
            children
        ]
    });
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/use-resolved-props.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useResolvedProps": (()=>useResolvedProps)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/split-props.js [app-client] (ecmascript)");
"use strict";
;
;
;
function useResolvedProps(inProps, cvaRecipe, shouldForwardProps) {
    const { css, isValidProperty } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChakraContext"])();
    const { children, ...props } = inProps;
    const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useResolvedProps.useMemo[result]": ()=>{
            const [htmlProps, restProps_A] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitProps"])(props, [
                "htmlWidth",
                "htmlHeight",
                "htmlSize",
                "htmlTranslate"
            ]);
            const [forwardedProps, restProps_B] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitProps"])(restProps_A, {
                "useResolvedProps.useMemo[result]": (key)=>shouldForwardProps(key, cvaRecipe.variantKeys)
            }["useResolvedProps.useMemo[result]"]);
            const [variantProps, restProps_C] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitProps"])(restProps_B, cvaRecipe.variantKeys);
            const [styleProps, elementProps] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitProps"])(restProps_C, isValidProperty);
            return {
                htmlProps: getHtmlProps(htmlProps),
                forwardedProps,
                variantProps,
                styleProps,
                elementProps
            };
        }
    }["useResolvedProps.useMemo[result]"], [
        cvaRecipe.variantKeys,
        shouldForwardProps,
        props,
        isValidProperty
    ]);
    const { css: cssStyles, ...propStyles } = result.styleProps;
    const cvaStyles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useResolvedProps.useMemo[cvaStyles]": ()=>cvaRecipe(result.variantProps)
    }["useResolvedProps.useMemo[cvaStyles]"], [
        cvaRecipe,
        result.variantProps
    ]);
    const styles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useResolvedProps.useMemo[styles]": ()=>{
            return css(cvaStyles, ...toArray(cssStyles), propStyles);
        }
    }["useResolvedProps.useMemo[styles]"], [
        css,
        cvaStyles,
        cssStyles,
        propStyles
    ]);
    return {
        styles,
        props: {
            ...result.forwardedProps,
            ...result.elementProps,
            ...result.htmlProps,
            children
        }
    };
}
const getHtmlProps = (props)=>{
    const htmlProps = {};
    for(const key in props){
        if (key.startsWith("html")) {
            htmlProps[key.replace("html", "").toLowerCase()] = props[key];
        }
    }
    return htmlProps;
};
const toArray = (val)=>{
    const res = Array.isArray(val) ? val : [
        val
    ];
    return res.filter(Boolean).flat();
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "chakra": (()=>chakra)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$is$2d$prop$2d$valid$2f$dist$2f$emotion$2d$is$2d$prop$2d$valid$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$serialize$2f$dist$2f$emotion$2d$serialize$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emotion/serialize/dist/emotion-serialize.development.esm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$use$2d$insertion$2d$effect$2d$with$2d$fallbacks$2f$dist$2f$emotion$2d$use$2d$insertion$2d$effect$2d$with$2d$fallbacks$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$utils$2f$dist$2f$emotion$2d$utils$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$interop$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/interop.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/cx.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$react$2f$dist$2f$emotion$2d$element$2d$489459f2$2e$browser$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__w__as__withEmotionCache$3e$__ = __turbopack_import__("[project]/node_modules/@emotion/react/dist/emotion-element-489459f2.browser.development.esm.js [app-client] (ecmascript) <export w as withEmotionCache>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$use$2d$resolved$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/use-resolved-props.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$react$2f$dist$2f$emotion$2d$element$2d$489459f2$2e$browser$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__T__as__ThemeContext$3e$__ = __turbopack_import__("[project]/node_modules/@emotion/react/dist/emotion-element-489459f2.browser.development.esm.js [app-client] (ecmascript) <export T as ThemeContext>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/merge-props.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$refs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/merge-refs.js [app-client] (ecmascript)");
"use strict";
"use client";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const isPropValid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$interop$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["interopDefault"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$is$2d$prop$2d$valid$2f$dist$2f$emotion$2d$is$2d$prop$2d$valid$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"]);
const testOmitPropsOnStringTag = isPropValid;
const testOmitPropsOnComponent = (key)=>key !== "theme";
const composeShouldForwardProps = (tag, options, isReal)=>{
    let shouldForwardProp;
    if (options) {
        const optionsShouldForwardProp = options.shouldForwardProp;
        shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? (propName)=>tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName) : optionsShouldForwardProp;
    }
    if (typeof shouldForwardProp !== "function" && isReal) {
        shouldForwardProp = tag.__emotion_forwardProp;
    }
    return shouldForwardProp;
};
let isBrowser = typeof document !== "undefined";
const Insertion = ({ cache: cache2, serialized, isStringTag })=>{
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$utils$2f$dist$2f$emotion$2d$utils$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registerStyles"])(cache2, serialized, isStringTag);
    const rules = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$use$2d$insertion$2d$effect$2d$with$2d$fallbacks$2f$dist$2f$emotion$2d$use$2d$insertion$2d$effect$2d$with$2d$fallbacks$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useInsertionEffectAlwaysWithSyncFallback"])({
        "Insertion.useInsertionEffectAlwaysWithSyncFallback[rules]": ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$utils$2f$dist$2f$emotion$2d$utils$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["insertStyles"])(cache2, serialized, isStringTag)
    }["Insertion.useInsertionEffectAlwaysWithSyncFallback[rules]"]);
    if (!isBrowser && rules !== void 0) {
        let serializedNames = serialized.name;
        let next = serialized.next;
        while(next !== void 0){
            serializedNames = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(serializedNames, next.name);
            next = next.next;
        }
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("style", {
            ...{
                [`data-emotion`]: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(cache2.key, serializedNames),
                dangerouslySetInnerHTML: {
                    __html: rules
                },
                nonce: cache2.sheet.nonce
            }
        });
    }
    return null;
};
const createStyled = (tag, configOrCva = {}, options = {})=>{
    if ("TURBOPACK compile-time truthy", 1) {
        if (tag === void 0) {
            throw new Error("You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.");
        }
    }
    const isReal = tag.__emotion_real === tag;
    const baseTag = isReal && tag.__emotion_base || tag;
    let identifierName;
    let targetClassName;
    if (options !== void 0) {
        identifierName = options.label;
        targetClassName = options.target;
    }
    let styles = [];
    const Styled = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$react$2f$dist$2f$emotion$2d$element$2d$489459f2$2e$browser$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__w__as__withEmotionCache$3e$__["withEmotionCache"])((inProps, cache2, ref)=>{
        const { cva, isValidProperty } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChakraContext"])();
        const cvaFn = configOrCva.__cva__ ? configOrCva : cva(configOrCva);
        const cvaRecipe = mergeCva(tag.__emotion_cva, cvaFn);
        const createShouldForwardProps = (props2)=>{
            return (prop, variantKeys)=>{
                if (props2.includes(prop)) return true;
                return !variantKeys?.includes(prop) && !isValidProperty(prop);
            };
        };
        if (!options.shouldForwardProp && options.forwardProps) {
            options.shouldForwardProp = createShouldForwardProps(options.forwardProps);
        }
        const fallbackShouldForwardProp = (prop, variantKeys)=>{
            const emotionSfp = typeof tag === "string" && tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
            const chakraSfp = !variantKeys?.includes(prop) && !isValidProperty(prop);
            return emotionSfp(prop) && chakraSfp;
        };
        const shouldForwardProp = composeShouldForwardProps(tag, options, isReal) || fallbackShouldForwardProp;
        const propsWithDefault = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.useMemo({
            "createStyled.Styled.useMemo[propsWithDefault]": ()=>Object.assign({}, options.defaultProps, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["compact"])(inProps))
        }["createStyled.Styled.useMemo[propsWithDefault]"], [
            inProps
        ]);
        const { props, styles: styleProps } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$use$2d$resolved$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useResolvedProps"])(propsWithDefault, cvaRecipe, shouldForwardProp);
        let className = "";
        let classInterpolations = [
            styleProps
        ];
        let mergedProps = props;
        if (props.theme == null) {
            mergedProps = {};
            for(let key in props){
                mergedProps[key] = props[key];
            }
            mergedProps.theme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.useContext(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$react$2f$dist$2f$emotion$2d$element$2d$489459f2$2e$browser$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__T__as__ThemeContext$3e$__["ThemeContext"]);
        }
        if (typeof props.className === "string") {
            className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$utils$2f$dist$2f$emotion$2d$utils$2e$browser$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRegisteredStyles"])(cache2.registered, classInterpolations, props.className);
        } else if (props.className != null) {
            className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(className, props.className);
        }
        const serialized = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emotion$2f$serialize$2f$dist$2f$emotion$2d$serialize$2e$development$2e$esm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["serializeStyles"])(styles.concat(classInterpolations), cache2.registered, mergedProps);
        className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(className, `${cache2.key}-${serialized.name}`);
        if (targetClassName !== void 0) {
            className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(className, targetClassName);
        }
        const shouldUseAs = !shouldForwardProp("as");
        let FinalTag = shouldUseAs && props.as || baseTag;
        let newProps = {};
        for(let prop in props){
            if (shouldUseAs && prop === "as") continue;
            if (shouldForwardProp(prop)) {
                newProps[prop] = props[prop];
            }
        }
        newProps.className = className.trim();
        newProps.ref = ref;
        const forwardAsChild = options.forwardAsChild || options.forwardProps?.includes("asChild");
        if (props.asChild && !forwardAsChild) {
            const child = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.Children.only(props.children);
            FinalTag = child.type;
            newProps.children = null;
            newProps = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeProps"])(newProps, child.props);
            newProps.ref = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$refs$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeRefs"])(ref, child.ref);
        }
        if (newProps.as && forwardAsChild) {
            newProps.as = void 0;
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
                children: [
                    /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Insertion, {
                        cache: cache2,
                        serialized,
                        isStringTag: typeof FinalTag === "string"
                    }),
                    /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(FinalTag, {
                        asChild: true,
                        ...newProps,
                        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(props.as, {
                            children: newProps.children
                        })
                    })
                ]
            });
        }
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Insertion, {
                    cache: cache2,
                    serialized,
                    isStringTag: typeof FinalTag === "string"
                }),
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(FinalTag, {
                    ...newProps
                })
            ]
        });
    });
    Styled.displayName = identifierName !== void 0 ? identifierName : `Styled(${typeof baseTag === "string" ? baseTag : baseTag.displayName || baseTag.name || "Component"})`;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_forwardProp = options.shouldForwardProp;
    Styled.__emotion_cva = configOrCva;
    Object.defineProperty(Styled, "toString", {
        value () {
            if (targetClassName === void 0 && ("TURBOPACK compile-time value", "development") !== "production") {
                return "NO_COMPONENT_SELECTOR";
            }
            return `.${targetClassName}`;
        }
    });
    return Styled;
};
const styledFn = createStyled.bind();
const cache = /* @__PURE__ */ new Map();
const chakraImpl = new Proxy(styledFn, {
    apply (_, __, args) {
        return styledFn(...args);
    },
    get (_, el) {
        if (!cache.has(el)) {
            cache.set(el, styledFn(el));
        }
        return cache.get(el);
    }
});
const chakra = chakraImpl;
const mergeCva = (cvaA, cvaB)=>{
    if (cvaA && !cvaB) return cvaA;
    if (!cvaA && cvaB) return cvaB;
    return cvaA.merge(cvaB);
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/use-slot-recipe.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useSlotRecipe": (()=>useSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js [app-client] (ecmascript)");
"use strict";
"use client";
;
;
function useSlotRecipe(options) {
    const { key, recipe: recipeProp } = options;
    const sys = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChakraContext"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useSlotRecipe.useMemo": ()=>{
            const recipe = recipeProp || (key != null ? sys.getSlotRecipe(key) : {});
            return sys.sva(structuredClone(recipe));
        }
    }["useSlotRecipe.useMemo"], [
        key,
        recipeProp,
        sys
    ]);
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/empty.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "EMPTY_SLOT_STYLES": (()=>EMPTY_SLOT_STYLES),
    "EMPTY_STYLES": (()=>EMPTY_STYLES)
});
"use strict";
const EMPTY_STYLES = Object.freeze({});
const EMPTY_SLOT_STYLES = Object.freeze({});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/create-slot-recipe-context.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createSlotRecipeContext": (()=>createSlotRecipeContext)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/merge-props.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/cx.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/create-context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$use$2d$slot$2d$recipe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/use-slot-recipe.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$empty$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/empty.js [app-client] (ecmascript)");
"use strict";
"use client";
;
;
;
;
;
;
;
;
const upperFirst = (str)=>str.charAt(0).toUpperCase() + str.slice(1);
const createSlotRecipeContext = (options)=>{
    const { key: recipeKey, recipe: recipeConfig } = options;
    const contextName = upperFirst(recipeKey || recipeConfig.className || "Component");
    const [StylesProvider, useStyles] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])({
        name: `${contextName}StylesContext`,
        errorMessage: `use${contextName}Styles returned is 'undefined'. Seems you forgot to wrap the components in "<${contextName}.Root />" `
    });
    const [ClassNamesProvider, useClassNames] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])({
        name: `${contextName}ClassNameContext`,
        errorMessage: `use${contextName}ClassNames returned is 'undefined'. Seems you forgot to wrap the components in "<${contextName}.Root />" `,
        strict: false
    });
    const [PropsProvider, usePropsContext] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])({
        strict: false,
        name: `${contextName}PropsContext`,
        providerName: `${contextName}PropsContext`,
        defaultValue: {}
    });
    function useRecipeResult(props) {
        const { unstyled, ...restProps } = props;
        const slotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$use$2d$slot$2d$recipe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSlotRecipe"])({
            key: recipeKey,
            recipe: restProps.recipe || recipeConfig
        });
        const [variantProps, otherProps] = slotRecipe.splitVariantProps(restProps);
        const styles = unstyled ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$empty$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EMPTY_SLOT_STYLES"] : slotRecipe(variantProps);
        return {
            styles,
            classNames: slotRecipe.classNameMap,
            props: otherProps
        };
    }
    function withRootProvider(Component, options2 = {}) {
        const { defaultProps } = options2;
        const StyledComponent = (inProps)=>{
            const props = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeProps"])(defaultProps, usePropsContext(), inProps);
            const { styles, classNames, props: rootProps } = useRecipeResult(props);
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StylesProvider, {
                value: styles,
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ClassNamesProvider, {
                    value: classNames,
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(Component, {
                        ...rootProps
                    })
                })
            });
        };
        StyledComponent.displayName = Component.displayName || Component.name;
        return StyledComponent;
    }
    const withProvider = (Component, slot, options2)=>{
        const { defaultProps, ...restOptions } = options2 ?? {};
        const SuperComponent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["chakra"])(Component, {}, restOptions);
        const StyledComponent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])((inProps, ref)=>{
            const props = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeProps"])(defaultProps ?? {}, usePropsContext(), inProps);
            const { styles, props: rootProps, classNames } = useRecipeResult(props);
            const className = classNames[slot];
            const element = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(StylesProvider, {
                value: styles,
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(ClassNamesProvider, {
                    value: classNames,
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(SuperComponent, {
                        ref,
                        ...rootProps,
                        css: [
                            styles[slot],
                            props.css
                        ],
                        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(props.className, className)
                    })
                })
            });
            return options2?.wrapElement?.(element, props) ?? element;
        });
        StyledComponent.displayName = Component.displayName || Component.name;
        return StyledComponent;
    };
    const withContext = (Component, slot, options2)=>{
        const SuperComponent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["chakra"])(Component, {}, options2);
        const StyledComponent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])((props, ref)=>{
            const styles = useStyles();
            const classNames = useClassNames();
            const className = classNames?.[slot];
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(SuperComponent, {
                ...props,
                css: [
                    slot ? styles[slot] : void 0,
                    props.css
                ],
                ref,
                className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(props.className, className)
            });
        });
        StyledComponent.displayName = Component.displayName || Component.name;
        return StyledComponent;
    };
    return {
        StylesProvider,
        ClassNamesProvider,
        PropsProvider,
        usePropsContext,
        useRecipeResult,
        withProvider,
        withContext,
        withRootProvider,
        useStyles,
        useClassNames
    };
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/use-recipe.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useRecipe": (()=>useRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js [app-client] (ecmascript)");
"use strict";
"use client";
;
;
function useRecipe(options) {
    const { key, recipe: recipeProp } = options;
    const sys = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChakraContext"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useRecipe.useMemo": ()=>{
            const recipe = recipeProp || (key != null ? sys.getRecipe(key) : {});
            return sys.cva(structuredClone(recipe));
        }
    }["useRecipe.useMemo"], [
        key,
        recipeProp,
        sys
    ]);
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/create-recipe-context.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createRecipeContext": (()=>createRecipeContext)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/create-context.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$use$2d$recipe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/use-recipe.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$empty$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/empty.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/merge-props.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/cx.js [app-client] (ecmascript)");
"use strict";
"use client";
;
;
;
;
;
;
;
;
const upperFirst = (str)=>str.charAt(0).toUpperCase() + str.slice(1);
function createRecipeContext(options) {
    const { key: recipeKey, recipe: recipeConfig } = options;
    const contextName = upperFirst(recipeKey || recipeConfig.className || "Component");
    const [PropsProvider, usePropsContext] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])({
        strict: false,
        name: `${contextName}PropsContext`,
        providerName: `${contextName}PropsContext`
    });
    function useRecipeResult(props) {
        const { unstyled, ...restProps } = props;
        const recipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$use$2d$recipe$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRecipe"])({
            key: recipeKey,
            recipe: restProps.recipe || recipeConfig
        });
        const [variantProps, otherProps] = recipe.splitVariantProps(restProps);
        const styles = unstyled ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$empty$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EMPTY_STYLES"] : recipe(variantProps);
        return {
            styles,
            className: recipe.className,
            props: otherProps
        };
    }
    const withContext = (Component, options2)=>{
        const SuperComponent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["chakra"])(Component, {}, options2);
        const StyledComponent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])((inProps, ref)=>{
            const props = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$merge$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeProps"])(usePropsContext(), inProps);
            const { styles, className, props: localProps } = useRecipeResult(props);
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(SuperComponent, {
                ...localProps,
                ref,
                css: [
                    styles,
                    props.css
                ],
                className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(className, props.className)
            });
        });
        StyledComponent.displayName = Component.displayName || Component.name;
        return StyledComponent;
    };
    function withPropsProvider() {
        return PropsProvider;
    }
    return {
        withContext,
        PropsProvider,
        withPropsProvider,
        usePropsContext,
        useRecipeResult
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/recipe-props.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "RecipePropsProvider": (()=>RecipePropsProvider),
    "useParentRecipeProps": (()=>useParentRecipeProps)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/create-context.js [app-client] (ecmascript)");
"use strict";
"use client";
;
;
const [RecipePropsContextProvider, useParentRecipeProps] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$create$2d$context$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])({
    name: "RecipePropsContext",
    strict: false
});
function RecipePropsProvider(props) {
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(RecipePropsContextProvider, {
        value: props.value,
        children: props.children
    });
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "defineAnimationStyles": (()=>defineAnimationStyles),
    "defineConditions": (()=>defineConditions),
    "defineConfig": (()=>defineConfig),
    "defineGlobalStyles": (()=>defineGlobalStyles),
    "defineKeyframes": (()=>defineKeyframes),
    "defineLayerStyles": (()=>defineLayerStyles),
    "defineRecipe": (()=>defineRecipe),
    "defineSemanticTokens": (()=>defineSemanticTokens),
    "defineSlotRecipe": (()=>defineSlotRecipe),
    "defineStyle": (()=>defineStyle),
    "defineTextStyles": (()=>defineTextStyles),
    "defineTokens": (()=>defineTokens),
    "mergeConfigs": (()=>mergeConfigs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$clone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/clone.js [app-client] (ecmascript)");
"use strict";
;
;
const defineConditions = (v)=>v;
const defineRecipe = (v)=>v;
const defineSlotRecipe = (v)=>v;
const defineKeyframes = (v)=>v;
const defineGlobalStyles = (v)=>v;
const defineStyle = (v)=>v;
const defineTextStyles = (v)=>v;
const defineAnimationStyles = (v)=>v;
const defineLayerStyles = (v)=>v;
function createProxy() {
    const identity = (v)=>v;
    return new Proxy(identity, {
        get () {
            return identity;
        }
    });
}
const defineTokens = /* @__PURE__ */ createProxy();
const defineSemanticTokens = /* @__PURE__ */ createProxy();
const defineConfig = (v)=>v;
const mergeConfigs = (...configs)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeWith"])({}, ...configs.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$clone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clone"]));
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/layers.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createLayers": (()=>createLayers)
});
"use strict";
const defaultLayers = {
    reset: "reset",
    base: "base",
    tokens: "tokens",
    recipes: "recipes"
};
const layerOrder = {
    reset: 0,
    base: 1,
    tokens: 2,
    recipes: 3
};
function createLayers(config) {
    const layers = config.layers ?? defaultLayers;
    const values = Object.values(layers);
    const names = values.sort((a, b)=>layerOrder[a] - layerOrder[b]);
    return {
        names,
        atRule: `@layer ${names.join(", ")};`,
        wrap (layer, styles) {
            if (config.disableLayers) return styles;
            const params = layers[layer];
            return {
                [`@layer ${params}`]: styles
            };
        }
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/references.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TOKEN_PATH_REGEX": (()=>TOKEN_PATH_REGEX),
    "expandReferences": (()=>expandReferences),
    "getReferences": (()=>getReferences),
    "hasReference": (()=>hasReference)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
"use strict";
;
const REFERENCE_REGEX = /({([^}]*)})/g;
const CURLY_REGEX = /[{}]/g;
const TOKEN_PATH_REGEX = /\w+\.\w+/;
const getReferences = (value)=>{
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(value)) return [];
    const matches = value.match(REFERENCE_REGEX);
    if (!matches) return [];
    return matches.map((match)=>match.replace(CURLY_REGEX, "")).map((value2)=>value2.trim());
};
const hasReference = (value)=>REFERENCE_REGEX.test(value);
function expandReferences(token) {
    if (!token.extensions?.references) {
        return token.extensions?.cssVar?.ref ?? token.value;
    }
    const references = token.extensions.references ?? {};
    token.value = Object.keys(references).reduce((valueStr, key)=>{
        const referenceToken = references[key];
        if (referenceToken.extensions.conditions) {
            return valueStr;
        }
        const value = expandReferences(referenceToken);
        return valueStr.replace(`{${key}}`, value);
    }, token.value);
    delete token.extensions.references;
    return token.value;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-transforms.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "addColorPalette": (()=>addColorPalette),
    "addConditionalCssVariables": (()=>addConditionalCssVariables),
    "addCssVariables": (()=>addCssVariables),
    "tokenTransforms": (()=>tokenTransforms)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/references.js [app-client] (ecmascript)");
"use strict";
;
const addCssVariables = {
    type: "extensions",
    enforce: "pre",
    name: "tokens/css-var",
    transform (token, dictionary) {
        const { prefix, formatCssVar } = dictionary;
        const { negative, originalPath } = token.extensions;
        const path = negative ? originalPath : token.path;
        return {
            cssVar: formatCssVar(path.filter(Boolean), prefix)
        };
    }
};
const addConditionalCssVariables = {
    enforce: "post",
    type: "value",
    name: "tokens/conditionals",
    transform (token, dictionary) {
        const { prefix, formatCssVar } = dictionary;
        const refs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getReferences"])(token.value);
        if (!refs.length) return token.value;
        refs.forEach((ref)=>{
            const variable = formatCssVar(ref.split("."), prefix);
            token.value = token.value.replace(`{${variable.ref}}`, variable);
        });
        return token.value;
    }
};
const addColorPalette = {
    type: "extensions",
    enforce: "pre",
    name: "tokens/colors/colorPalette",
    match (token) {
        return token.extensions.category === "colors" && !token.extensions.virtual;
    },
    transform (token, dict) {
        let path = token.path.slice();
        path.pop();
        path.shift();
        if (path.length === 0) {
            const newPath = [
                ...token.path
            ];
            newPath.shift();
            path = newPath;
        }
        if (path.length === 0) {
            return {};
        }
        const roots = path.reduce((acc, _, i, arr)=>{
            const next = arr.slice(0, i + 1);
            acc.push(next);
            return acc;
        }, []);
        const root = path[0];
        const value = dict.formatTokenName(path);
        const keys = token.path.slice(token.path.indexOf(root) + 1).reduce((acc, _, i, arr)=>{
            acc.push(arr.slice(i));
            return acc;
        }, []);
        if (keys.length === 0) {
            keys.push([
                ""
            ]);
        }
        return {
            colorPalette: {
                value,
                roots,
                keys
            }
        };
    }
};
const tokenTransforms = [
    addCssVariables,
    addConditionalCssVariables,
    addColorPalette
];
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/calc.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "calc": (()=>calc)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
"use strict";
;
function resolveReference(operand) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(operand) && operand.reference) {
        return operand.reference;
    }
    return String(operand);
}
const toExpression = (operator, ...operands)=>operands.map(resolveReference).join(` ${operator} `).replace(/calc/g, "");
const add = (...operands)=>`calc(${toExpression("+", ...operands)})`;
const subtract = (...operands)=>`calc(${toExpression("-", ...operands)})`;
const multiply = (...operands)=>`calc(${toExpression("*", ...operands)})`;
const divide = (...operands)=>`calc(${toExpression("/", ...operands)})`;
const negate = (x)=>{
    const value = resolveReference(x);
    if (value != null && !Number.isNaN(parseFloat(value))) {
        return String(value).startsWith("-") ? String(value).slice(1) : `-${value}`;
    }
    return multiply(value, -1);
};
const calc = Object.assign((x)=>({
        add: (...operands)=>calc(add(x, ...operands)),
        subtract: (...operands)=>calc(subtract(x, ...operands)),
        multiply: (...operands)=>calc(multiply(x, ...operands)),
        divide: (...operands)=>calc(divide(x, ...operands)),
        negate: ()=>calc(negate(x)),
        toString: ()=>x.toString()
    }), {
    add,
    subtract,
    multiply,
    divide,
    negate
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/unit-conversion.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getUnit": (()=>getUnit),
    "toEm": (()=>toEm),
    "toPx": (()=>toPx),
    "toRem": (()=>toRem)
});
"use strict";
const BASE_FONT_SIZE = 16;
const UNIT_PX = "px";
const UNIT_EM = "em";
const UNIT_REM = "rem";
function getUnit(value = "") {
    const DIGIT_REGEX = new RegExp(String.raw`-?\d+(?:\.\d+|\d*)`);
    const UNIT_REGEX = new RegExp(`${UNIT_PX}|${UNIT_EM}|${UNIT_REM}`);
    const unit = value.match(new RegExp(`${DIGIT_REGEX.source}(${UNIT_REGEX.source})`));
    return unit?.[1];
}
function toPx(value = "") {
    if (typeof value === "number") {
        return `${value}px`;
    }
    const unit = getUnit(value);
    if (!unit) return value;
    if (unit === UNIT_PX) {
        return value;
    }
    if (unit === UNIT_EM || unit === UNIT_REM) {
        return `${parseFloat(value) * BASE_FONT_SIZE}${UNIT_PX}`;
    }
}
function toEm(value = "", fontSize = BASE_FONT_SIZE) {
    const unit = getUnit(value);
    if (!unit) return value;
    if (unit === UNIT_EM) {
        return value;
    }
    if (unit === UNIT_PX) {
        return `${parseFloat(value) / fontSize}${UNIT_EM}`;
    }
    if (unit === UNIT_REM) {
        return `${parseFloat(value) * BASE_FONT_SIZE / fontSize}${UNIT_EM}`;
    }
}
function toRem(value = "") {
    const unit = getUnit(value);
    if (!unit) return value;
    if (unit === UNIT_REM) {
        return value;
    }
    if (unit === UNIT_EM) {
        return `${parseFloat(value)}${UNIT_REM}`;
    }
    if (unit === UNIT_PX) {
        return `${parseFloat(value) / BASE_FONT_SIZE}${UNIT_REM}`;
    }
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-middleware.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "addNegativeTokens": (()=>addNegativeTokens),
    "addPixelUnit": (()=>addPixelUnit),
    "addVirtualPalette": (()=>addVirtualPalette),
    "removeEmptyTokens": (()=>removeEmptyTokens),
    "tokenMiddlewares": (()=>tokenMiddlewares)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$calc$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/calc.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/unit-conversion.js [app-client] (ecmascript)");
"use strict";
;
;
;
const addNegativeTokens = {
    enforce: "pre",
    transform (dictionary) {
        const { prefix, allTokens, formatCssVar, formatTokenName, registerToken } = dictionary;
        const tokens = allTokens.filter(({ extensions })=>extensions.category === "spacing");
        tokens.forEach((token)=>{
            const originalPath = token.path.slice();
            const originalVar = formatCssVar(originalPath, prefix);
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(token.value) && token.value === "0rem") {
                return;
            }
            const nextToken = structuredClone(token);
            Object.assign(nextToken.extensions, {
                negative: true,
                prop: `-${token.extensions.prop}`,
                originalPath
            });
            nextToken.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$calc$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calc"].negate(originalVar.ref);
            const lastPath = nextToken.path[nextToken.path.length - 1];
            if (lastPath != null) {
                nextToken.path[nextToken.path.length - 1] = `-${lastPath}`;
            }
            if (nextToken.path) {
                nextToken.name = formatTokenName(nextToken.path);
            }
            registerToken(nextToken);
        });
    }
};
const units = /* @__PURE__ */ new Set([
    "spacing",
    "sizes",
    "borderWidths",
    "fontSizes",
    "radii"
]);
const addPixelUnit = {
    enforce: "post",
    transform (dictionary) {
        const tokens = dictionary.allTokens.filter((token)=>{
            return units.has(token.extensions.category) && !token.extensions.negative;
        });
        tokens.forEach((token)=>{
            Object.assign(token.extensions, {
                pixelValue: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toPx"])(token.value)
            });
        });
    }
};
const addVirtualPalette = {
    enforce: "post",
    transform (dictionary) {
        const { allTokens, registerToken, formatTokenName } = dictionary;
        const tokens = allTokens.filter(({ extensions })=>extensions.category === "colors");
        const keys = /* @__PURE__ */ new Map();
        const colorPalettes = /* @__PURE__ */ new Map();
        tokens.forEach((token)=>{
            const { colorPalette } = token.extensions;
            if (!colorPalette) return;
            colorPalette.keys.forEach((keyPath)=>{
                keys.set(formatTokenName(keyPath), keyPath);
            });
            colorPalette.roots.forEach((colorPaletteRoot)=>{
                const name = formatTokenName(colorPaletteRoot);
                const colorPaletteList = colorPalettes.get(name) || [];
                colorPaletteList.push(token);
                colorPalettes.set(name, colorPaletteList);
                if (token.extensions.default && colorPaletteRoot.length === 1) {
                    const keyPath = colorPalette.keys[0]?.filter(Boolean);
                    if (!keyPath.length) return;
                    const path = colorPaletteRoot.concat(keyPath);
                    keys.set(formatTokenName(path), []);
                }
            });
        });
        keys.forEach((segments)=>{
            const path = [
                "colors",
                "colorPalette",
                ...segments
            ].filter(Boolean);
            const name = formatTokenName(path);
            const prop = formatTokenName(path.slice(1));
            const token = {
                name,
                value: name,
                originalValue: name,
                path,
                extensions: {
                    condition: "base",
                    originalPath: path,
                    category: "colors",
                    prop,
                    virtual: true
                }
            };
            registerToken(token, "pre");
        });
    }
};
const removeEmptyTokens = {
    enforce: "post",
    transform (dictionary) {
        dictionary.allTokens = dictionary.allTokens.filter((token)=>token.value !== "");
    }
};
const tokenMiddlewares = [
    addNegativeTokens,
    addVirtualPalette,
    addPixelUnit,
    removeEmptyTokens
];
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css-var.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "cssVar": (()=>cssVar)
});
"use strict";
const escRegex = /[^a-zA-Z0-9_\u0081-\uffff-]/g;
function esc(string) {
    return `${string}`.replace(escRegex, (s)=>`\\${s}`);
}
const dashCaseRegex = /[A-Z]/g;
function dashCase(string) {
    return string.replace(dashCaseRegex, (match)=>`-${match.toLowerCase()}`);
}
function cssVar(name, options = {}) {
    const { fallback = "", prefix = "" } = options;
    const variable = dashCase([
        "-",
        prefix,
        esc(name)
    ].filter(Boolean).join("-"));
    return {
        var: variable,
        ref: `var(${variable}${fallback ? `, ${fallback}` : ""})`
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/map-to-json.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "mapToJson": (()=>mapToJson)
});
"use strict";
function mapToJson(map) {
    const obj = {};
    map.forEach((value, key)=>{
        if (value instanceof Map) {
            obj[key] = Object.fromEntries(value);
        } else {
            obj[key] = value;
        }
    });
    return obj;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/esc.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "esc": (()=>esc)
});
"use strict";
const rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|^-|[^\x80-\uFFFF\w-]/g;
const fcssescape = function(ch, asCodePoint) {
    if (!asCodePoint) return "\\" + ch;
    if (ch === "\0") return "\uFFFD";
    if (ch === "-" && ch.length === 1) return "\\-";
    return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16);
};
const esc = (sel)=>{
    return (sel + "").replace(rcssescape, fcssescape);
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/expand-reference.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "expandTokenReferences": (()=>expandTokenReferences)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$esc$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/esc.js [app-client] (ecmascript)");
"use strict";
;
const expandTokenReferences = (str, resolve)=>{
    let expanded = "";
    let index = 0;
    let state = "char";
    let tokenPath = "";
    let fallback = "";
    const currentStates = [];
    while(index < str.length){
        const char = str[index];
        if (char === "{") {
            const endIndex = str.indexOf("}", index);
            if (endIndex === -1) {
                break;
            }
            const path = str.slice(index + 1, endIndex);
            const resolved = resolve(path);
            expanded += resolved ?? path;
            index = endIndex + 1;
            continue;
        }
        if (state === "token") {
            if (char === ",") {
                if (str[index] === "") {
                    index++;
                }
                state = "fallback";
                currentStates.push(state);
                const resolved = resolve(tokenPath);
                if (resolved?.endsWith(")")) {
                    expanded += resolved.slice(0, -1);
                }
                tokenPath = "";
                fallback = "";
                continue;
            }
        }
        if (state === "fallback") {
            const nextFallback = fallback + char;
            if (nextFallback === ", var(") {
                const innerEndIndex = cssVarParser(str.slice(index + 1));
                const endIndex = innerEndIndex + index + 1;
                const cssVar = str.slice(index + 1, endIndex);
                if (endIndex === -1) {
                    break;
                }
                expanded += ", var(" + cssVar + ")";
                index = endIndex + 1;
                state = currentStates.pop() ?? state;
                fallback = "";
                continue;
            }
        }
        if (state === "token" || state === "fallback") {
            index++;
            if (char === ")") {
                state = currentStates.pop() ?? state ?? "char";
                fallback += char;
                const resolved = tokenPath ? resolve(tokenPath) ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$esc$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["esc"])(tokenPath) : tokenPath;
                if (fallback) {
                    fallback = fallback.slice(1).trim();
                    if (!fallback.startsWith("token(") && fallback.endsWith(")")) {
                        fallback = fallback.slice(0, -1);
                    }
                    if (fallback.includes("token(")) {
                        const parsed = expandTokenReferences(fallback, resolve);
                        if (parsed) {
                            fallback = parsed.slice(0, -1);
                        }
                    } else if (fallback) {
                        const resolvedFallback = resolve(fallback);
                        if (resolvedFallback) {
                            fallback = resolvedFallback;
                        }
                    }
                }
                const lastChar = expanded.at(-1);
                if (fallback) {
                    if (lastChar?.trim()) {
                        expanded += resolved.slice(0, -1) + (", " + fallback + ")");
                    } else {
                        expanded += fallback;
                    }
                } else {
                    expanded += resolved || ")";
                }
                tokenPath = "";
                fallback = "";
                state = "char";
                continue;
            }
            if (state === "token") {
                tokenPath += char;
            }
            if (state === "fallback") {
                fallback += char;
            }
            continue;
        }
        const tokenIndex = str.indexOf("token(", index);
        if (tokenIndex !== -1) {
            const innerTokenIndex = tokenIndex + "token(".length;
            expanded += str.slice(index, tokenIndex);
            index = innerTokenIndex;
            state = "token";
            currentStates.push(state);
            continue;
        }
        expanded += char;
        index++;
    }
    return expanded;
};
const cssVarParser = (str)=>{
    let index = 0;
    const openedParenthesises = [
        "("
    ];
    while(index < str.length){
        const char = str[index];
        if (char === "(") {
            openedParenthesises.push(char);
        } else if (char === ")") {
            openedParenthesises.pop();
            if (openedParenthesises.length === 0) {
                return index;
            }
        }
        index++;
    }
    return index;
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-dictionary.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createTokenDictionary": (()=>createTokenDictionary),
    "tokenCategories": (()=>tokenCategories)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$create$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/create-props.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$transforms$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-transforms.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$middleware$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-middleware.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2d$var$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css-var.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$map$2d$to$2d$json$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/map-to-json.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$expand$2d$reference$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/expand-reference.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/references.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$esc$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/esc.js [app-client] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
const isToken = (value)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(value) && Object.prototype.hasOwnProperty.call(value, "value");
};
function expandBreakpoints(breakpoints) {
    if (!breakpoints) return {
        breakpoints: {},
        sizes: {}
    };
    return {
        breakpoints: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mapObject"])(breakpoints, (value)=>({
                value
            })),
        sizes: Object.fromEntries(Object.entries(breakpoints).map(([key, value])=>[
                `breakpoint-${key}`,
                {
                    value
                }
            ]))
    };
}
function createTokenDictionary(options) {
    const { prefix = "", tokens = {}, semanticTokens = {}, breakpoints = {} } = options;
    const formatTokenName = (path)=>path.join(".");
    const formatCssVar = (path, prefix2)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2d$var$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cssVar"])(path.join("-"), {
            prefix: prefix2
        });
    const allTokens = [];
    const tokenNameMap = /* @__PURE__ */ new Map();
    const conditionMap = /* @__PURE__ */ new Map();
    const cssVarMap = /* @__PURE__ */ new Map();
    const colorPaletteMap = /* @__PURE__ */ new Map();
    const flatMap = /* @__PURE__ */ new Map();
    const byCategory = /* @__PURE__ */ new Map();
    const categoryMap = /* @__PURE__ */ new Map();
    const transforms = /* @__PURE__ */ new Map();
    const middlewares = [];
    function registerToken(token, phase) {
        allTokens.push(token);
        tokenNameMap.set(token.name, token);
        if (phase) {
            transforms.forEach((fn)=>{
                if (fn.enforce === phase) transformToken(fn, token);
            });
        }
    }
    const breakpointTokens = expandBreakpoints(breakpoints);
    const computedTokens = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["compact"])({
        ...tokens,
        breakpoints: breakpointTokens.breakpoints,
        sizes: {
            ...tokens.sizes,
            ...breakpointTokens.sizes
        }
    });
    function registerTokens() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["walkObject"])(computedTokens, (entry, path)=>{
            const isDefault = path.includes("DEFAULT");
            path = filterDefault(path);
            const category = path[0];
            const name = formatTokenName(path);
            const t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(entry) ? {
                value: entry
            } : entry;
            const token = {
                value: t.value,
                originalValue: t.value,
                name,
                path,
                extensions: {
                    condition: "base",
                    originalPath: path,
                    category,
                    prop: formatTokenName(path.slice(1))
                }
            };
            if (isDefault) {
                token.extensions.default = true;
            }
            registerToken(token);
        }, {
            stop: isToken
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["walkObject"])(semanticTokens, (entry, path)=>{
            const isDefault = path.includes("DEFAULT");
            path = filterBaseCondition(filterDefault(path));
            const category = path[0];
            const name = formatTokenName(path);
            const t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(entry.value) ? {
                value: {
                    base: entry.value
                }
            } : entry;
            const token = {
                value: t.value.base || "",
                originalValue: t.value.base || "",
                name,
                path,
                extensions: {
                    originalPath: path,
                    category,
                    conditions: t.value,
                    condition: "base",
                    prop: formatTokenName(path.slice(1))
                }
            };
            if (isDefault) {
                token.extensions.default = true;
            }
            registerToken(token);
        }, {
            stop: isToken
        });
    }
    function getByName(name) {
        return tokenNameMap.get(name);
    }
    function buildConditionMap(token) {
        const { condition } = token.extensions;
        if (!condition) return;
        if (!conditionMap.has(condition)) {
            conditionMap.set(condition, /* @__PURE__ */ new Set());
        }
        conditionMap.get(condition).add(token);
    }
    function buildCategoryMap(token) {
        const { category, prop } = token.extensions;
        if (!category) return;
        if (!categoryMap.has(category)) {
            categoryMap.set(category, /* @__PURE__ */ new Map());
        }
        categoryMap.get(category).set(prop, token);
    }
    function buildCssVars(token) {
        const { condition, negative, virtual, cssVar: cssVar2 } = token.extensions;
        if (negative || virtual || !condition || !cssVar2) return;
        if (!cssVarMap.has(condition)) {
            cssVarMap.set(condition, /* @__PURE__ */ new Map());
        }
        cssVarMap.get(condition).set(cssVar2.var, token.value);
    }
    function buildFlatMap(token) {
        const { category, prop, cssVar: cssVar2, negative } = token.extensions;
        if (!category) return;
        if (!byCategory.has(category)) {
            byCategory.set(category, /* @__PURE__ */ new Map());
        }
        const value = negative ? token.extensions.conditions ? token.originalValue : token.value : cssVar2.ref;
        byCategory.get(category).set(prop, value);
        flatMap.set([
            category,
            prop
        ].join("."), value);
    }
    function buildColorPalette(token) {
        const { colorPalette, virtual, default: isDefault } = token.extensions;
        if (!colorPalette || virtual) return;
        colorPalette.roots.forEach((root)=>{
            const name = formatTokenName(root);
            if (!colorPaletteMap.has(name)) {
                colorPaletteMap.set(name, /* @__PURE__ */ new Map());
            }
            const virtualPath = replaceRootWithColorPalette([
                ...token.path
            ], [
                ...root
            ]);
            const virtualName = formatTokenName(virtualPath);
            const virtualToken = getByName(virtualName);
            if (!virtualToken || !virtualToken.extensions.cssVar) return;
            const { var: virtualVar } = virtualToken.extensions.cssVar;
            colorPaletteMap.get(name).set(virtualVar, token.extensions.cssVar.ref);
            if (isDefault && root.length === 1) {
                const colorPaletteName = formatTokenName([
                    "colors",
                    "colorPalette"
                ]);
                const colorPaletteToken = getByName(colorPaletteName);
                if (!colorPaletteToken) return;
                const name2 = formatTokenName(token.path);
                const virtualToken2 = getByName(name2);
                if (!virtualToken2) return;
                const keyPath = colorPalette.keys[0]?.filter(Boolean);
                if (!keyPath.length) return;
                const computedName = formatTokenName(root.concat(keyPath));
                if (!colorPaletteMap.has(computedName)) {
                    colorPaletteMap.set(computedName, /* @__PURE__ */ new Map());
                }
                colorPaletteMap.get(computedName).set(colorPaletteToken.extensions.cssVar.var, virtualToken2.extensions.cssVar.ref);
            }
        });
    }
    let byCategoryJson = {};
    function setupViews() {
        allTokens.forEach((token)=>{
            buildConditionMap(token);
            buildCategoryMap(token);
            buildCssVars(token);
            buildFlatMap(token);
            buildColorPalette(token);
        });
        byCategoryJson = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$map$2d$to$2d$json$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mapToJson"])(byCategory);
    }
    const colorMix = (value, tokenFn)=>{
        if (!value || typeof value !== "string") return {
            invalid: true,
            value
        };
        const [colorPath, rawOpacity] = value.split("/");
        if (!colorPath || !rawOpacity) {
            return {
                invalid: true,
                value: colorPath
            };
        }
        const colorToken = tokenFn(colorPath);
        const opacityToken = getByName(`opacity.${rawOpacity}`)?.value;
        if (!opacityToken && isNaN(Number(rawOpacity))) {
            return {
                invalid: true,
                value: colorPath
            };
        }
        const percent = opacityToken ? Number(opacityToken) * 100 + "%" : `${rawOpacity}%`;
        const color = colorToken ?? colorPath;
        return {
            invalid: false,
            color,
            value: `color-mix(in srgb, ${color} ${percent}, transparent)`
        };
    };
    const getVar = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((value, fallback)=>{
        return flatMap.get(value) ?? fallback;
    });
    const getCategoryValues = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((category)=>{
        return byCategoryJson[category] || null;
    });
    const expandReferenceInValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((value)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$expand$2d$reference$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["expandTokenReferences"])(value, (path)=>{
            if (!path) return;
            if (path.includes("/")) {
                const mix = colorMix(path, (v)=>getVar(v));
                if (mix.invalid) {
                    throw new Error("Invalid color mix at " + path + ": " + mix.value);
                }
                return mix.value;
            }
            const resolved = getVar(path);
            if (resolved) return resolved;
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TOKEN_PATH_REGEX"].test(path) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$esc$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["esc"])(path) : path;
        });
    });
    const dictionary = {
        prefix,
        allTokens,
        tokenMap: tokenNameMap,
        registerToken,
        getByName,
        formatTokenName,
        formatCssVar,
        flatMap,
        cssVarMap,
        categoryMap,
        colorPaletteMap,
        getVar,
        getCategoryValues,
        expandReferenceInValue
    };
    function registerTransform(...fns) {
        fns.forEach((fn)=>{
            transforms.set(fn.name, fn);
        });
    }
    function registerMiddleware(...fns) {
        middlewares.push(...fns);
    }
    function transformToken(transform, token) {
        if (token.extensions.references) return;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(transform.match) && !transform.match(token)) return;
        const fn = (v)=>transform.transform(v, dictionary);
        const transformed = fn(token);
        switch(true){
            case transform.type === "extensions":
                Object.assign(token.extensions, transformed);
                break;
            case transform.type === "value":
                token.value = transformed;
                break;
            default:
                token[transform.type] = transformed;
                break;
        }
    }
    function applyMiddlewares(enforce) {
        middlewares.forEach((middleware)=>{
            if (middleware.enforce === enforce) {
                middleware.transform(dictionary);
            }
        });
    }
    function applyTransforms(enforce) {
        transforms.forEach((transform)=>{
            if (transform.enforce === enforce) {
                allTokens.forEach((token)=>{
                    transformToken(transform, token);
                });
            }
        });
    }
    function addConditionalTokens() {
        allTokens.forEach((token)=>{
            const tokens2 = getConditionalTokens(token);
            if (!tokens2 || tokens2.length === 0) return;
            tokens2.forEach((token2)=>{
                registerToken(token2);
            });
        });
    }
    function getTokenReferences(value) {
        const refs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getReferences"])(value);
        return refs.map((ref)=>getByName(ref)).filter(Boolean);
    }
    function addReferences() {
        allTokens.forEach((token)=>{
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasReference"])(token.value)) return;
            const references = getTokenReferences(token.value);
            token.extensions.references = references.reduce((acc, ref)=>{
                acc[ref.name] = ref;
                return acc;
            }, {});
        });
    }
    function expandTokenReferences$1() {
        allTokens.forEach((token)=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["expandReferences"])(token);
        });
    }
    function build() {
        applyMiddlewares("pre");
        applyTransforms("pre");
        addConditionalTokens();
        addReferences();
        expandTokenReferences$1();
        applyMiddlewares("post");
        applyTransforms("post");
        setupViews();
    }
    registerTokens();
    registerTransform(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$transforms$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tokenTransforms"]);
    registerMiddleware(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$middleware$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tokenMiddlewares"]);
    build();
    return dictionary;
}
function filterDefault(path) {
    if (path[0] === "DEFAULT") return path;
    return path.filter((item)=>item !== "DEFAULT");
}
function filterBaseCondition(path) {
    return path.filter((item)=>item !== "base");
}
function getConditionalTokens(token) {
    if (!token.extensions.conditions) return;
    const { conditions } = token.extensions;
    const tokens = [];
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["walkObject"])(conditions, (value, path)=>{
        const nextPath = filterBaseCondition(path);
        if (!nextPath.length) return;
        const nextToken = structuredClone(token);
        nextToken.value = value;
        nextToken.extensions.condition = nextPath.join(":");
        tokens.push(nextToken);
    });
    return tokens;
}
function replaceRootWithColorPalette(path, roots) {
    const startIndex = path.findIndex((_, index)=>roots.every((rootElement, rootIndex)=>path[index + rootIndex] === rootElement));
    if (startIndex === -1) {
        return path;
    }
    path.splice(startIndex, roots.length);
    path.splice(startIndex, 0, "colorPalette");
    return path;
}
const tokenCategories = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$create$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createProps"])()([
    "aspectRatios",
    "zIndex",
    "opacity",
    "colors",
    "fonts",
    "fontSizes",
    "fontWeights",
    "lineHeights",
    "letterSpacings",
    "sizes",
    "shadows",
    "spacing",
    "radii",
    "cursor",
    "borders",
    "borderWidths",
    "borderStyles",
    "durations",
    "easings",
    "animations",
    "blurs",
    "gradients",
    "breakpoints",
    "assets"
]);
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/breakpoints.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createBreakpoints": (()=>createBreakpoints)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/unit-conversion.js [app-client] (ecmascript)");
"use strict";
;
const capitalize = (str)=>str.charAt(0).toUpperCase() + str.slice(1);
function createBreakpoints(breakpoints) {
    const sorted = sort(breakpoints);
    const values = Object.fromEntries(sorted);
    function get(name) {
        return values[name];
    }
    function only(name) {
        return build(get(name));
    }
    function getRanges() {
        const breakpoints2 = Object.keys(values);
        const permuations = getPermutations(breakpoints2);
        const results = breakpoints2.flatMap((name)=>{
            const value = get(name);
            const down2 = [
                `${name}Down`,
                build({
                    max: adjust(value.min)
                })
            ];
            const up2 = [
                name,
                build({
                    min: value.min
                })
            ];
            const _only = [
                `${name}Only`,
                only(name)
            ];
            return [
                up2,
                _only,
                down2
            ];
        }).filter(([, value])=>value !== "").concat(permuations.map(([min, max])=>{
            const minValue = get(min);
            const maxValue = get(max);
            return [
                `${min}To${capitalize(max)}`,
                build({
                    min: minValue.min,
                    max: adjust(maxValue.min)
                })
            ];
        }));
        return Object.fromEntries(results);
    }
    function toConditions() {
        const ranges = getRanges();
        return Object.fromEntries(Object.entries(ranges));
    }
    const conditions = toConditions();
    const getCondition = (key)=>{
        return conditions[key];
    };
    function keys() {
        return [
            "base",
            ...Object.keys(values)
        ];
    }
    function up(name) {
        return build({
            min: get(name).min
        });
    }
    function down(name) {
        return build({
            max: adjust(get(name).min)
        });
    }
    return {
        values: Object.values(values),
        only,
        keys,
        conditions,
        getCondition,
        up,
        down
    };
}
function adjust(value) {
    const computedMax = parseFloat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toPx"])(value) ?? "") - 0.04;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toRem"])(`${computedMax}px`);
}
function sort(breakpoints) {
    const entries = Object.entries(breakpoints).sort(([, minA], [, minB])=>{
        return parseInt(minA, 10) < parseInt(minB, 10) ? -1 : 1;
    });
    return entries.map(([name, min], index, entries2)=>{
        let max = null;
        if (index <= entries2.length - 1) {
            max = entries2[index + 1]?.[1];
        }
        if (max != null) {
            max = adjust(max);
        }
        return [
            name,
            {
                name,
                min: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toRem"])(min),
                max
            }
        ];
    });
}
function getPermutations(values) {
    const result = [];
    values.forEach((current, index)=>{
        let idx = index;
        idx++;
        let next = values[idx];
        while(next){
            result.push([
                current,
                next
            ]);
            idx++;
            next = values[idx];
        }
    });
    return result;
}
function build({ min, max }) {
    if (min == null && max == null) return "";
    return [
        "@media screen",
        min && `(min-width: ${min})`,
        max && `(max-width: ${max})`
    ].filter(Boolean).join(" and ");
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/conditions.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createConditions": (()=>createConditions)
});
"use strict";
const mapEntries = (obj, fn)=>{
    return Object.fromEntries(Object.entries(obj).map(([key, value])=>fn(key, value)));
};
const createConditions = (options)=>{
    const { breakpoints, conditions: conds = {} } = options;
    const conditions = mapEntries(conds, (key, value)=>[
            `_${key}`,
            value
        ]);
    const values = Object.assign({}, conditions, breakpoints.conditions);
    function keys() {
        return Object.keys(values);
    }
    function has(key) {
        return keys().includes(key) || /^@|&|&$/.test(key) || key.startsWith("_");
    }
    function sort(paths) {
        return paths.filter((v)=>v !== "base").sort((a, b)=>{
            const aa = has(a);
            const bb = has(b);
            if (aa && !bb) return 1;
            if (!aa && bb) return -1;
            return 0;
        });
    }
    function expandAtRule(key) {
        if (!key.startsWith("@breakpoint")) return key;
        return breakpoints.getCondition(key.replace("@breakpoint ", ""));
    }
    function resolve(key) {
        return Reflect.get(values, key) || key;
    }
    return {
        keys,
        sort,
        has,
        resolve,
        breakpoints: breakpoints.keys(),
        expandAtRule
    };
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/color-mix.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "colorMix": (()=>colorMix),
    "createColorMixTransform": (()=>createColorMixTransform)
});
"use strict";
const colorMix = (value, token)=>{
    if (!value || typeof value !== "string") {
        return {
            invalid: true,
            value
        };
    }
    const [rawColor, rawOpacity] = value.split("/");
    if (!rawColor || !rawOpacity || rawColor === "currentBg") {
        return {
            invalid: true,
            value: rawColor
        };
    }
    const colorToken = token(`colors.${rawColor}`);
    const opacityToken = token.raw(`opacity.${rawOpacity}`)?.value;
    if (!opacityToken && isNaN(Number(rawOpacity))) {
        return {
            invalid: true,
            value: rawColor
        };
    }
    const percent = opacityToken ? Number(opacityToken) * 100 + "%" : `${rawOpacity}%`;
    const color = colorToken ?? rawColor;
    return {
        invalid: false,
        color,
        value: `color-mix(in srgb, ${color} ${percent}, transparent)`
    };
};
const createColorMixTransform = (prop)=>(value, args)=>{
        const mix = args.utils.colorMix(value);
        if (mix.invalid) return {
            [prop]: value
        };
        const cssVar = "--mix-" + prop;
        return {
            [cssVar]: mix.value,
            [prop]: `var(${cssVar}, ${mix.color})`
        };
    };
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/utility.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createUtility": (()=>createUtility)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$map$2d$to$2d$json$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/map-to-json.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/color-mix.js [app-client] (ecmascript)");
"use strict";
;
;
;
;
function normalize(config) {
    return config;
}
function normalizeConfig(config) {
    return Object.fromEntries(Object.entries(config).map(([property, propertyConfig])=>{
        return [
            property,
            normalize(propertyConfig)
        ];
    }));
}
function createUtility(options) {
    const configs = normalizeConfig(options.config);
    const tokens = options.tokens;
    const shorthands = /* @__PURE__ */ new Map();
    const propValues = /* @__PURE__ */ new Map();
    function register(property, config) {
        configs[property] = normalize(config);
        assignProperty(property, config);
    }
    const assignProperty = (property, config)=>{
        const values = getPropertyValues(config);
        if (!values) return;
        propValues.set(property, values);
        assignPropertyType(property, config);
    };
    const assignProperties = ()=>{
        for (const [prop, config] of Object.entries(configs)){
            if (!config) continue;
            assignProperty(prop, config);
        }
    };
    const assignShorthands = ()=>{
        for (const [property, config] of Object.entries(configs)){
            const { shorthand } = config ?? {};
            if (!shorthand) continue;
            const values = Array.isArray(shorthand) ? shorthand : [
                shorthand
            ];
            values.forEach((name)=>shorthands.set(name, property));
        }
    };
    const assignColorPaletteProperty = ()=>{
        const values = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$map$2d$to$2d$json$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mapToJson"])(tokens.colorPaletteMap);
        register("colorPalette", {
            values: Object.keys(values),
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((value)=>values[value])
        });
    };
    const propTypes = /* @__PURE__ */ new Map();
    const assignPropertyType = (property, config)=>{
        if (!config) return;
        const values = getPropertyValues(config, (key)=>`type:Tokens["${key}"]`);
        if (typeof values === "object" && values.type) {
            propTypes.set(property, /* @__PURE__ */ new Set([
                `type:${values.type}`
            ]));
            return;
        }
        if (values) {
            const keys2 = new Set(Object.keys(values));
            propTypes.set(property, keys2);
        }
        const set = propTypes.get(property) ?? /* @__PURE__ */ new Set();
        if (config.property) {
            propTypes.set(property, set.add(`CssProperties["${config.property}"]`));
        }
    };
    const assignPropertyTypes = ()=>{
        for (const [property, propertyConfig] of Object.entries(configs)){
            if (!propertyConfig) continue;
            assignPropertyType(property, propertyConfig);
        }
    };
    const addPropertyType = (property, type)=>{
        const set = propTypes.get(property) ?? /* @__PURE__ */ new Set();
        propTypes.set(property, /* @__PURE__ */ new Set([
            ...set,
            ...type
        ]));
    };
    const getTypes = ()=>{
        const map = /* @__PURE__ */ new Map();
        for (const [prop, values] of propTypes.entries()){
            if (values.size === 0) {
                map.set(prop, [
                    "string"
                ]);
                continue;
            }
            const typeValues = Array.from(values).map((key)=>{
                if (key.startsWith("CssProperties")) return key;
                if (key.startsWith("type:")) return key.replace("type:", "");
                return JSON.stringify(key);
            });
            map.set(prop, typeValues);
        }
        return map;
    };
    const getPropertyValues = (config, resolveFn)=>{
        const { values } = config;
        const fn = (key)=>{
            const value = resolveFn?.(key);
            return value ? {
                [value]: value
            } : void 0;
        };
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(values)) {
            return fn?.(values) ?? tokens.getCategoryValues(values) ?? {};
        }
        if (Array.isArray(values)) {
            return values.reduce((result, value)=>{
                result[value] = value;
                return result;
            }, {});
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(values)) {
            return values(resolveFn ? fn : tokens.getCategoryValues);
        }
        return values;
    };
    const defaultTransform = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((prop, value)=>{
        return {
            [prop]: prop.startsWith("--") ? tokens.getVar(value, value) : value
        };
    });
    const tokenFn = Object.assign(tokens.getVar, {
        raw: (path)=>tokens.getByName(path)
    });
    const transform = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((prop, raw)=>{
        const key = resolveShorthand(prop);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(raw) && !raw.includes("_EMO_")) {
            raw = tokens.expandReferenceInValue(raw);
        }
        const config = configs[key];
        if (!config) {
            return defaultTransform(key, raw);
        }
        const value = propValues.get(key)?.[raw];
        if (!config.transform) {
            return defaultTransform(prop, value ?? raw);
        }
        const _colorMix = (value2)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["colorMix"])(value2, tokenFn);
        return config.transform(value ?? raw, {
            raw,
            token: tokenFn,
            utils: {
                colorMix: _colorMix
            }
        });
    });
    function build() {
        assignShorthands();
        assignColorPaletteProperty();
        assignProperties();
        assignPropertyTypes();
    }
    build();
    const hasShorthand = shorthands.size > 0;
    const resolveShorthand = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((prop)=>{
        return shorthands.get(prop) ?? prop;
    });
    const keys = ()=>{
        return [
            ...Array.from(shorthands.keys()),
            ...Object.keys(configs)
        ];
    };
    const instance = {
        keys,
        hasShorthand,
        transform,
        shorthands,
        resolveShorthand,
        register,
        getTypes,
        addPropertyType
    };
    return instance;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/normalize.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createNormalizeFn": (()=>createNormalizeFn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-client] (ecmascript)");
"use strict";
;
function createNormalizeFn(context) {
    const { utility, normalize } = context;
    const { hasShorthand, resolveShorthand } = utility;
    return function(styles) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["walkObject"])(styles, normalize, {
            stop: (value)=>Array.isArray(value),
            getKey: hasShorthand ? resolveShorthand : void 0
        });
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/serialize.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createSerializeFn": (()=>createSerializeFn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
"use strict";
;
;
function createSerializeFn(options) {
    const { conditions, isValidProperty } = options;
    return function serialize(styles) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["walkObject"])(styles, (value)=>value, {
            getKey: (prop, value)=>{
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(value)) return prop;
                if (!conditions.has(prop) && !isValidProperty(prop)) {
                    return parseSelectors(prop).map((s)=>"&" + s).join(", ");
                }
                return prop;
            }
        });
    };
}
function parseSelectors(selector) {
    const result = [];
    let parenCount = 0;
    let currentSelector = "";
    let inEscape = false;
    for(let i = 0; i < selector.length; i++){
        const char = selector[i];
        if (char === "\\" && !inEscape) {
            inEscape = true;
            currentSelector += char;
            continue;
        }
        if (inEscape) {
            inEscape = false;
            currentSelector += char;
            continue;
        }
        if (char === "(") {
            parenCount++;
        } else if (char === ")") {
            parenCount--;
        }
        if (char === "," && parenCount === 0) {
            result.push(currentSelector.trim());
            currentSelector = "";
        } else {
            currentSelector += char;
        }
    }
    if (currentSelector) {
        result.push(currentSelector.trim());
    }
    return result;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sort-at-params.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "sortAtParams": (()=>sortAtParams)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-client] (ecmascript)");
"use strict";
;
const createMediaQueryRegex = (dimension)=>({
        minMax: new RegExp(`(!?\\(\\s*min(-device-)?-${dimension})(.|
)+\\(\\s*max(-device)?-${dimension}`, "i"),
        min: new RegExp(`\\(\\s*min(-device)?-${dimension}`, "i"),
        maxMin: new RegExp(`(!?\\(\\s*max(-device)?-${dimension})(.|
)+\\(\\s*min(-device)?-${dimension}`, "i"),
        max: new RegExp(`\\(\\s*max(-device)?-${dimension}`, "i")
    });
const widthRegex = createMediaQueryRegex("width");
const heightRegex = createMediaQueryRegex("height");
const createQueryTester = (regexSet)=>({
        isMin: _testQuery(regexSet.minMax, regexSet.maxMin, regexSet.min),
        isMax: _testQuery(regexSet.maxMin, regexSet.minMax, regexSet.max)
    });
const { isMin: isMinWidth, isMax: isMaxWidth } = createQueryTester(widthRegex);
const { isMin: isMinHeight, isMax: isMaxHeight } = createQueryTester(heightRegex);
const isPrint = /print/i;
const isPrintOnly = /^print$/i;
const isLength = /(-?\d*\.?\d+)(ch|em|ex|px|rem)/;
const lengthExec = /(\d)/;
const maxValue = Number.MAX_VALUE;
const multipliers = {
    ch: 8.8984375,
    em: 16,
    rem: 16,
    ex: 8.296875,
    px: 1
};
function getQueryLength(query) {
    const length = isLength.exec(query) || (isMinWidth(query) || isMinHeight(query) ? lengthExec.exec(query) : null);
    if (!length) return maxValue;
    if (length[0] === "0") return 0;
    const number = parseFloat(length[1]);
    const unit = length[2];
    return number * (multipliers[unit] || 1);
}
function _testQuery(doubleTestTrue, doubleTestFalse, singleTest) {
    return (query)=>doubleTestTrue.test(query) || !doubleTestFalse.test(query) && singleTest.test(query);
}
function _testIsPrint(a, b) {
    const isPrintA = isPrint.test(a), isPrintOnlyA = isPrintOnly.test(a);
    const isPrintB = isPrint.test(b), isPrintOnlyB = isPrintOnly.test(b);
    if (isPrintA && isPrintB) {
        if (!isPrintOnlyA && isPrintOnlyB) return 1;
        if (isPrintOnlyA && !isPrintOnlyB) return -1;
        return a.localeCompare(b);
    }
    return isPrintA ? 1 : isPrintB ? -1 : null;
}
const sortAtParams = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((a, b)=>{
    const testIsPrint = _testIsPrint(a, b);
    if (testIsPrint !== null) return testIsPrint;
    const minA = isMinWidth(a) || isMinHeight(a), maxA = isMaxWidth(a) || isMaxHeight(a);
    const minB = isMinWidth(b) || isMinHeight(b), maxB = isMaxWidth(b) || isMaxHeight(b);
    if (minA && maxB) return -1;
    if (maxA && minB) return 1;
    const lengthA = getQueryLength(a), lengthB = getQueryLength(b);
    if (lengthA === maxValue && lengthB === maxValue) return a.localeCompare(b);
    if (lengthA === maxValue) return 1;
    if (lengthB === maxValue) return -1;
    if (lengthA !== lengthB) {
        return lengthA > lengthB ? maxA ? -1 : 1 : maxA ? 1 : -1;
    }
    return a.localeCompare(b);
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sort-at-rules.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "sortAtRules": (()=>sortAtRules)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sort$2d$at$2d$params$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sort-at-params.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
"use strict";
;
;
function sortQueries(queries) {
    return queries.sort(([a], [b])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sort$2d$at$2d$params$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sortAtParams"])(a, b));
}
function sortAtRules(obj) {
    const mediaQueries = [];
    const containerQueries = [];
    const rest = {};
    for (const [key, value] of Object.entries(obj)){
        if (key.startsWith("@media")) {
            mediaQueries.push([
                key,
                value
            ]);
        } else if (key.startsWith("@container")) {
            containerQueries.push([
                key,
                value
            ]);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(value)) {
            rest[key] = sortAtRules(value);
        } else {
            rest[key] = value;
        }
    }
    const sortedMediaQueries = sortQueries(mediaQueries);
    const sortedContainerQueries = sortQueries(containerQueries);
    return {
        ...rest,
        ...Object.fromEntries(sortedMediaQueries),
        ...Object.fromEntries(sortedContainerQueries)
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createCssFn": (()=>createCssFn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sort$2d$at$2d$rules$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sort-at-rules.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-client] (ecmascript)");
"use strict";
;
;
;
;
;
;
const importantRegex = /\s*!(important)?/i;
const isImportant = (v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(v) ? importantRegex.test(v) : false;
const withoutImportant = (v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(v) ? v.replace(importantRegex, "").trim() : v;
function createCssFn(context) {
    const { transform, conditions, normalize } = context;
    const mergeFn = mergeCss(context);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((...styleArgs)=>{
        const styles = mergeFn(...styleArgs);
        const normalized = normalize(styles);
        const result = /* @__PURE__ */ Object.create(null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["walkObject"])(normalized, (value, paths)=>{
            const important = isImportant(value);
            if (value == null) return;
            const [prop, ...selectors] = conditions.sort(paths).map(conditions.resolve);
            if (important) {
                value = withoutImportant(value);
            }
            let transformed = transform(prop, value) ?? /* @__PURE__ */ Object.create(null);
            transformed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["walkObject"])(transformed, (v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isString"])(v) && important ? `${v} !important` : v, {
                getKey: (prop2)=>conditions.expandAtRule(prop2)
            });
            mergeByPath(result, selectors.flat(), transformed);
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sort$2d$at$2d$rules$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sortAtRules"])(result);
    });
}
function mergeByPath(target, paths, value) {
    let acc = target;
    for (const path of paths){
        if (!path) continue;
        if (!acc[path]) acc[path] = /* @__PURE__ */ Object.create(null);
        acc = acc[path];
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeWith"])(acc, value);
}
function compactFn(...styles) {
    return styles.filter((style)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(style) && Object.keys((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["compact"])(style)).length > 0);
}
function mergeCss(ctx) {
    function resolve(styles) {
        const comp = compactFn(...styles);
        if (comp.length === 1) return comp;
        return comp.map((style)=>ctx.normalize(style));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((...styles)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeWith"])({}, ...resolve(styles));
    });
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/cva.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createRecipeFn": (()=>createRecipeFn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$omit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/omit.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/split-props.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$uniq$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/uniq.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/cx.js [app-client] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
const defaults = (conf)=>({
        base: {},
        variants: {},
        defaultVariants: {},
        compoundVariants: [],
        ...conf
    });
function createRecipeFn(options) {
    const { css, conditions, normalize, layers } = options;
    function cva(config = {}) {
        const { base, variants, defaultVariants, compoundVariants } = defaults(config);
        const getVariantCss = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createCssFn"])({
            conditions,
            normalize,
            transform (prop, value) {
                return variants[prop]?.[value];
            }
        });
        const resolve = (props = {})=>{
            const variantSelections = normalize({
                ...defaultVariants,
                ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["compact"])(props)
            });
            let variantCss = {
                ...base
            };
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeWith"])(variantCss, getVariantCss(variantSelections));
            const compoundVariantCss = getCompoundVariantCss(compoundVariants, variantSelections);
            return layers.wrap("recipes", css(variantCss, compoundVariantCss));
        };
        const variantKeys = Object.keys(variants);
        const splitVariantProps = (props)=>{
            const restProps = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$omit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["omit"])(props, [
                "recipe"
            ]);
            const [recipeProps, localProps] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitProps"])(restProps, variantKeys);
            if (!variantKeys.includes("colorPalette")) {
                recipeProps.colorPalette = props.colorPalette || defaultVariants.colorPalette;
            }
            if (variantKeys.includes("orientation")) {
                localProps.orientation = props.orientation;
            }
            return [
                recipeProps,
                localProps
            ];
        };
        const variantMap = Object.fromEntries(Object.entries(variants).map(([key, value])=>[
                key,
                Object.keys(value)
            ]));
        const cvaFn = (props)=>css(resolve(props));
        return Object.assign(cvaFn, {
            className: config.className,
            __cva__: true,
            variantMap,
            variantKeys,
            raw: resolve,
            config,
            splitVariantProps,
            merge (other) {
                return cva(mergeCva(options)(this, other));
            }
        });
    }
    function getCompoundVariantCss(cvs, vm) {
        let result = {};
        cvs.forEach((cv)=>{
            const isMatching = Object.entries(cv).every(([key, value])=>{
                if (key === "css") return true;
                const values = Array.isArray(value) ? value : [
                    value
                ];
                return values.some((value2)=>vm[key] === value2);
            });
            if (isMatching) {
                result = css(result, cv.css);
            }
        });
        return result;
    }
    return cva;
}
function mergeCva(opts) {
    const { css } = opts;
    return function mergeCva2(cvaA, cvaB) {
        const override = defaults(cvaB.config);
        const variantKeys = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$uniq$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["uniq"])(cvaA.variantKeys, Object.keys(cvaB.variants));
        const base = css(cvaA.base, override.base);
        const variants = Object.fromEntries(variantKeys.map((key)=>[
                key,
                css(cvaA.config.variants[key], override.variants[key])
            ]));
        const defaultVariants = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeWith"])(cvaA.config.defaultVariants, override.defaultVariants);
        const compoundVariants = [
            ...cvaA.compoundVariants,
            ...override.compoundVariants
        ];
        const className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cx"])(cvaA.className, cvaB.className);
        return {
            className,
            base,
            variants,
            defaultVariants,
            compoundVariants
        };
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sva.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createSlotRecipeFn": (()=>createSlotRecipeFn),
    "getSlotCompoundVariant": (()=>getSlotCompoundVariant)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$omit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/omit.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/split-props.js [app-client] (ecmascript)");
"use strict";
;
;
const getSlotRecipes = (config = {})=>{
    const init = (slot)=>({
            base: config.base?.[slot] ?? {},
            variants: {},
            defaultVariants: config.defaultVariants ?? {},
            compoundVariants: config.compoundVariants ? getSlotCompoundVariant(config.compoundVariants, slot) : []
        });
    const slots = config.slots ?? [];
    const entries = slots.map((slot)=>[
            slot,
            init(slot)
        ]);
    for (const [variantsKey, variantsSpec] of Object.entries(config.variants ?? {})){
        for (const [variantKey, variantSpec] of Object.entries(variantsSpec)){
            entries.forEach(([slot, slotRecipe])=>{
                var _a;
                (_a = slotRecipe.variants)[variantsKey] ?? (_a[variantsKey] = {});
                slotRecipe.variants[variantsKey][variantKey] = variantSpec[slot] ?? {};
            });
        }
    }
    return Object.fromEntries(entries);
};
const getSlotCompoundVariant = (compoundVariants, slotName)=>compoundVariants.filter((compoundVariant)=>compoundVariant.css[slotName]).map((compoundVariant)=>({
            ...compoundVariant,
            css: compoundVariant.css[slotName]
        }));
function createSlotRecipeFn(options) {
    const { cva } = options;
    return function sva(config = {}) {
        const slots = Object.entries(getSlotRecipes(config)).map(([slot, slotCva])=>[
                slot,
                cva(slotCva)
            ]);
        function svaFn(props) {
            const result = slots.map(([slot, cvaFn])=>[
                    slot,
                    cvaFn(props)
                ]);
            return Object.fromEntries(result);
        }
        const variants = config.variants ?? {};
        const variantKeys = Object.keys(variants);
        function splitVariantProps(props) {
            const restProps = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$omit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["omit"])(props, [
                "recipe"
            ]);
            const [recipeProps, localProps] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitProps"])(restProps, variantKeys);
            if (!variantKeys.includes("colorPalette")) {
                recipeProps.colorPalette = props.colorPalette || config.defaultVariants?.colorPalette;
            }
            if (variantKeys.includes("orientation")) {
                localProps.orientation = props.orientation;
            }
            return [
                recipeProps,
                localProps
            ];
        }
        const variantMap = Object.fromEntries(Object.entries(variants).map(([key, value])=>[
                key,
                Object.keys(value)
            ]));
        let classNameMap = {};
        if (config.className) {
            classNameMap = Object.fromEntries(config.slots.map((slot)=>[
                    slot,
                    `${config.className}__${slot}`
                ]));
        }
        return Object.assign(svaFn, {
            variantMap,
            variantKeys,
            splitVariantProps,
            classNameMap
        });
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/preflight.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createPreflight": (()=>createPreflight)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
"use strict";
;
function createPreflight(options) {
    const { preflight } = options;
    if (!preflight) return {};
    const { scope = "", level = "parent" } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(preflight) ? preflight : {};
    let selector = "";
    if (scope && level === "parent") {
        selector = `${scope} `;
    } else if (scope && level === "element") {
        selector = `&${scope}`;
    }
    const scoped = {
        "*": {
            margin: "0px",
            padding: "0px",
            font: "inherit",
            wordWrap: "break-word",
            WebkitTapHighlightColor: "transparent"
        },
        "*, *::before, *::after, *::backdrop": {
            boxSizing: "border-box",
            borderWidth: "0px",
            borderStyle: "solid",
            borderColor: "var(--global-color-border, currentColor)"
        },
        hr: {
            height: "0px",
            color: "inherit",
            borderTopWidth: "1px"
        },
        body: {
            minHeight: "100dvh",
            position: "relative"
        },
        img: {
            borderStyle: "none"
        },
        "img, svg, video, canvas, audio, iframe, embed, object": {
            display: "block",
            verticalAlign: "middle"
        },
        iframe: {
            border: "none"
        },
        "img, video": {
            maxWidth: "100%",
            height: "auto"
        },
        "p, h1, h2, h3, h4, h5, h6": {
            overflowWrap: "break-word"
        },
        "ol, ul": {
            listStyle: "none"
        },
        "code, kbd, pre, samp": {
            fontSize: "1em"
        },
        "button, [type='button'], [type='reset'], [type='submit']": {
            WebkitAppearance: "button",
            backgroundColor: "transparent",
            backgroundImage: "none"
        },
        "button, input, optgroup, select, textarea": {
            color: "inherit"
        },
        "button, select": {
            textTransform: "none"
        },
        table: {
            textIndent: "0px",
            borderColor: "inherit",
            borderCollapse: "collapse"
        },
        "*::placeholder": {
            opacity: "unset",
            color: "#9ca3af",
            userSelect: "none"
        },
        textarea: {
            resize: "vertical"
        },
        summary: {
            display: "list-item"
        },
        small: {
            fontSize: "80%"
        },
        "sub, sup": {
            fontSize: "75%",
            lineHeight: 0,
            position: "relative",
            verticalAlign: "baseline"
        },
        sub: {
            bottom: "-0.25em"
        },
        sup: {
            top: "-0.5em"
        },
        dialog: {
            padding: "0px"
        },
        a: {
            color: "inherit",
            textDecoration: "inherit"
        },
        "abbr:where([title])": {
            textDecoration: "underline dotted"
        },
        "b, strong": {
            fontWeight: "bolder"
        },
        "code, kbd, samp, pre": {
            fontSize: "1em",
            "--font-mono-fallback": "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New'",
            fontFamily: "var(--global-font-mono, var(--font-mono-fallback))"
        },
        'input[type="text"], input[type="email"], input[type="search"], input[type="password"]': {
            WebkitAppearance: "none",
            MozAppearance: "none"
        },
        "input[type='search']": {
            WebkitAppearance: "textfield",
            outlineOffset: "-2px"
        },
        "::-webkit-search-decoration, ::-webkit-search-cancel-button": {
            WebkitAppearance: "none"
        },
        "::-webkit-file-upload-button": {
            WebkitAppearance: "button",
            font: "inherit"
        },
        'input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button': {
            height: "auto"
        },
        "input[type='number']": {
            MozAppearance: "textfield"
        },
        ":-moz-ui-invalid": {
            boxShadow: "none"
        },
        ":-moz-focusring": {
            outline: "auto"
        },
        "[hidden]:where(:not([hidden='until-found']))": {
            display: "none !important"
        }
    };
    const preflightCss = {
        [scope || "html"]: {
            lineHeight: 1.5,
            "--font-fallback": "ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
            WebkitTextSizeAdjust: "100%",
            WebkitFontSmoothing: "antialiased",
            MozOsxFontSmoothing: "grayscale",
            textRendering: "optimizeLegibility",
            touchAction: "manipulation",
            MozTabSize: "4",
            tabSize: "4",
            fontFamily: "var(--global-font-body, var(--font-fallback))"
        }
    };
    if (level === "element") {
        const modified = Object.entries(scoped).reduce((acc, [k, v])=>{
            acc[k] = {
                [selector]: v
            };
            return acc;
        }, {});
        Object.assign(preflightCss, modified);
    } else if (selector) {
        preflightCss[selector] = scoped;
    } else {
        Object.assign(preflightCss, scoped);
    }
    return preflightCss;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/system.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "createSystem": (()=>createSystem),
    "isValidSystem": (()=>isValidSystem)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$layers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/layers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$dictionary$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-dictionary.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$breakpoints$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/breakpoints.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$conditions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/conditions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$utility$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/utility.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$flatten$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/flatten.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$pandacss$2f$is$2d$valid$2d$prop$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@pandacss/is-valid-prop/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$normalize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/normalize.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$serialize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/serialize.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$cva$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/cva.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sva$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sva.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/utils/split-props.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$preflight$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/preflight.js [app-client] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
function createSystem(...configs) {
    const config = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeConfigs"])(...configs);
    const { theme = {}, utilities = {}, globalCss = {}, cssVarsRoot = ":where(:root, :host)", cssVarsPrefix = "chakra", preflight } = config;
    const layers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$layers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createLayers"])(config);
    const tokens = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$dictionary$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createTokenDictionary"])({
        breakpoints: theme.breakpoints,
        tokens: theme.tokens,
        semanticTokens: theme.semanticTokens,
        prefix: cssVarsPrefix
    });
    const breakpoints = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$breakpoints$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createBreakpoints"])(theme.breakpoints ?? {});
    const conditions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$conditions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createConditions"])({
        conditions: config.conditions ?? {},
        breakpoints
    });
    const utility = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$utility$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createUtility"])({
        config: utilities,
        tokens
    });
    function assignComposition() {
        const { textStyles, layerStyles, animationStyles } = theme;
        const compositions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["compact"])({
            textStyle: textStyles,
            layerStyle: layerStyles,
            animationStyle: animationStyles
        });
        for (const [key, values] of Object.entries(compositions)){
            const flatValues = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$flatten$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["flatten"])(values ?? {}, (v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(v) && "value" in v);
            utility.register(key, {
                values: Object.keys(flatValues),
                transform (value) {
                    return css(flatValues[value]);
                }
            });
        }
    }
    assignComposition();
    utility.addPropertyType("animationName", Object.keys(theme.keyframes ?? {}));
    const properties = /* @__PURE__ */ new Set([
        "css",
        ...utility.keys(),
        ...conditions.keys()
    ]);
    const isValidProperty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((prop)=>properties.has(prop) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$pandacss$2f$is$2d$valid$2d$prop$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isCssProperty"])(prop));
    const normalizeValue = (value)=>{
        if (Array.isArray(value)) {
            return value.reduce((acc, current, index)=>{
                const key = conditions.breakpoints[index];
                if (current != null) acc[key] = current;
                return acc;
            }, {});
        }
        return value;
    };
    const normalizeFn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$normalize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createNormalizeFn"])({
        utility,
        normalize: normalizeValue
    });
    const serialize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$serialize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createSerializeFn"])({
        conditions,
        isValidProperty
    });
    const css = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createCssFn"])({
        transform: utility.transform,
        conditions,
        normalize: normalizeFn
    });
    const cva = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$cva$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createRecipeFn"])({
        css,
        conditions,
        normalize: normalizeFn,
        layers
    });
    const sva = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sva$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createSlotRecipeFn"])({
        cva
    });
    function getTokenCss() {
        const result = {};
        for (const [key, values] of tokens.cssVarMap.entries()){
            const varsObj = Object.fromEntries(values);
            if (Object.keys(varsObj).length === 0) continue;
            const selector = key === "base" ? cssVarsRoot : conditions.resolve(key);
            const cssObject = css(serialize({
                [selector]: varsObj
            }));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeWith"])(result, cssObject);
        }
        return layers.wrap("tokens", result);
    }
    function getGlobalCss() {
        const keyframes = Object.fromEntries(Object.entries(theme.keyframes ?? {}).map(([key, value])=>[
                `@keyframes ${key}`,
                value
            ]));
        const result = Object.assign({}, keyframes, css(serialize(globalCss)));
        return layers.wrap("base", result);
    }
    function splitCssProps(props) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["splitProps"])(props, isValidProperty);
    }
    function getPreflightCss() {
        const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$preflight$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createPreflight"])({
            preflight
        });
        return layers.wrap("reset", result);
    }
    const tokenMap = getTokenMap(tokens);
    const tokenFn = (path, fallback)=>{
        return tokenMap.get(path)?.value || fallback;
    };
    tokenFn.var = (path, fallback)=>{
        return tokenMap.get(path)?.variable || fallback;
    };
    function getRecipe(key, fallback) {
        return theme.recipes?.[key] ?? fallback;
    }
    function getSlotRecipe(key, fallback) {
        return theme.slotRecipes?.[key] ?? fallback;
    }
    function isRecipe(key) {
        return Object.hasOwnProperty.call(theme.recipes ?? {}, key);
    }
    function isSlotRecipe(key) {
        return Object.hasOwnProperty.call(theme.slotRecipes ?? {}, key);
    }
    function hasRecipe(key) {
        return isRecipe(key) || isSlotRecipe(key);
    }
    return {
        $$chakra: true,
        _config: config,
        breakpoints,
        tokens,
        conditions,
        utility,
        token: tokenFn,
        properties,
        layers,
        isValidProperty,
        splitCssProps,
        normalizeValue,
        getTokenCss,
        getGlobalCss,
        getPreflightCss,
        css,
        cva,
        sva,
        getRecipe,
        getSlotRecipe,
        hasRecipe,
        isRecipe,
        isSlotRecipe
    };
}
function getTokenMap(tokens) {
    const map = /* @__PURE__ */ new Map();
    tokens.allTokens.forEach((token)=>{
        const { cssVar, virtual, conditions } = token.extensions;
        const value = !!conditions || virtual ? cssVar.ref : token.value;
        map.set(token.name, {
            value,
            variable: cssVar.ref
        });
    });
    return map;
}
const isValidSystem = (mod)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(mod) && !!Reflect.get(mod, "$$chakra");
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/use-token.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useToken": (()=>useToken)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js [app-client] (ecmascript)");
"use strict";
"use client";
;
;
function useToken(category, token) {
    const sys = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useChakraContext"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useToken.useMemo": ()=>{
            const arr = Array.isArray(token) ? token : [
                token
            ];
            return arr.map({
                "useToken.useMemo": (t)=>sys.token(`${category}.${t}`, t)
            }["useToken.useMemo"]);
        }
    }["useToken.useMemo"], [
        sys,
        category,
        token
    ]);
}
;
}}),
}]);

//# sourceMappingURL=node_modules_%40chakra-ui_react_dist_esm_styled-system_f6e9d0._.js.map